<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0048)http://NVSE.silverlock.org/NVSE_command_doc.html -->

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta name="generator" content="HTML Tidy for Linux/x86 (vers 25 March 2009), see www.w3.org" />
	<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />

	<title>NVSE Command Docs</title>
	
	<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js'></script>
	
	<script type="text/javascript">
		$(document).ready(function(){$('a[href^="#"]').on("click",function(e){if(e.which==1){var t=this.hash,n=$(t);$("html, body").stop().animate({scrollTop:n.offset().top},500,"swing",function(){window.location.hash=t})}else if(e.which==2){}})})
	</script>
	
	<!--from http://listjs.com/-->
	<script type="text/javascript">//<![CDATA[
		(function(a,b){"use strict";var c=a.document,d;var e=function(a,e,f){var g=this,i,j,k,l,m,n,o={updated:[]};this.listContainer=typeof a=="string"?c.getElementById(a):a;if(!this.listContainer)return;this.items=[];this.visibleItems=[];this.matchingItems=[];this.searched=false;this.filtered=false;this.list=null;this.templateEngines={};this.page=e.page||1000;this.i=e.i||1;j={start:function(a,b){b.plugins=b.plugins||{};this.classes(b);i=new m(g,b);this.callbacks(b);this.items.start(a,b);g.update();this.plugins(b.plugins)},classes:function(a){a.listClass=a.listClass||"list";a.searchClass=a.searchClass||"search";a.sortClass=a.sortClass||"sort"},callbacks:function(a){g.list=d.getByClass(a.listClass,g.listContainer,true);d.addEvent(d.getByClass(a.searchClass,g.listContainer),"keyup",g.search);n=d.getByClass(a.sortClass,g.listContainer);d.addEvent(n,"click",g.sort)},items:{start:function(a,c){if(c.valueNames){var d=this.get(),e=c.valueNames;if(c.indexAsync){this.indexAsync(d,e)}else{this.index(d,e)}}if(a!==b){g.add(a)}},get:function(){var a=g.list.childNodes,c=[];for(var d=0,e=a.length;d<e;d++){if(a[d].data===b){c.push(a[d])}}return c},index:function(a,b){for(var c=0,d=a.length;c<d;c++){g.items.push(new l(b,a[c]))}},indexAsync:function(a,b){var c=a.splice(0,100);this.index(c,b);if(a.length>0){setTimeout(function(){j.items.indexAsync(a,b)},10)}else{g.update()}}},plugins:function(a){var b={templater:i,init:j,initialItems:k,Item:l,Templater:m,sortButtons:n,events:o,reset:r};for(var c=0;c<a.length;c++){a[c][1]=a[c][1]||{};var d=a[c][1].name||a[c][0];g[d]=g.plugins[a[c][0]].call(g,b,a[c][1])}}};this.add=function(a,c){if(c){p(a,c)}var d=[],e=false;if(a[0]===b){a=[a]}for(var f=0,h=a.length;f<h;f++){var i=null;if(a[f]instanceof l){i=a[f];i.reload()}else{e=g.items.length>g.page?true:false;i=new l(a[f],b,e)}g.items.push(i);d.push(i)}g.update();return d};var p=function(a,b,c){var d=a.splice(0,100);c=c||[];c=c.concat(g.add(d));if(a.length>0){setTimeout(function(){p(a,b,c)},10)}else{g.update();b(c)}};this.show=function(a,b){this.i=a;this.page=b;g.update()};this.remove=function(a,b,c){var d=0;for(var e=0,f=g.items.length;e<f;e++){if(g.items[e].values()[a]==b){i.remove(g.items[e],c);g.items.splice(e,1);f--;d++}}g.update();return d};this.get=function(a,b){var c=[];for(var d=0,e=g.items.length;d<e;d++){var f=g.items[d];if(f.values()[a]==b){c.push(f)}}if(c.length==0){return null}else if(c.length==1){return c[0]}else{return c}};this.sort=function(a,c){var e=g.items.length,f=null,i=a.target||a.srcElement,j="",k=false,l="asc",m="desc",c=c||{};if(i===b){f=a;k=c.asc||false}else{f=d.getAttribute(i,"data-sort");k=d.hasClass(i,l)?false:true}for(var o=0,p=n.length;o<p;o++){d.removeClass(n[o],l);d.removeClass(n[o],m)}if(k){if(i!==b){d.addClass(i,l)}k=true}else{if(i!==b){d.addClass(i,m)}k=false}if(c.sortFunction){c.sortFunction=c.sortFunction}else{c.sortFunction=function(a,b){return d.sorter.alphanum(a.values()[f].toLowerCase(),b.values()[f].toLowerCase(),k)}}g.items.sort(c.sortFunction);g.update()};this.search=function(a,c){g.i=1;var d=[],e,f,h,j,k,c=c===b?g.items[0].values():c,a=a===b?"":a,l=a.target||a.srcElement;a=l===b?(""+a).toLowerCase():""+l.value.toLowerCase();k=g.items;a=a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");i.clear();if(a===""){r.search();g.searched=false;g.update()}else{g.searched=true;for(var m=0,n=k.length;m<n;m++){e=false;f=k[m];j=f.values();for(var o in c){if(j.hasOwnProperty(o)&&c[o]!==null){h=j[o]!=null?j[o].toString().toLowerCase():"";if(a!==""&&h.search(a)>-1){e=true}}}if(e){f.found=true;d.push(f)}else{f.found=false}}g.update()}return g.visibleItems};this.filter=function(a){g.i=1;r.filter();if(a===b){g.filtered=false}else{g.filtered=true;var c=g.items;for(var d=0,e=c.length;d<e;d++){var f=c[d];if(a(f)){f.filtered=true}else{f.filtered=false}}}g.update();return g.visibleItems};this.size=function(){return g.items.length};this.clear=function(){i.clear();g.items=[]};this.on=function(a,b){o[a].push(b)};var q=function(a){var b=o[a].length;while(b--){o[a][b]()}};var r={filter:function(){var a=g.items,b=a.length;while(b--){a[b].filtered=false}},search:function(){var a=g.items,b=a.length;while(b--){a[b].found=false}}};this.update=function(){var a=g.items,b=a.length;g.visibleItems=[];g.matchingItems=[];i.clear();for(var c=0;c<b;c++){if(a[c].matching()&&g.matchingItems.length+1>=g.i&&g.visibleItems.length<g.page){a[c].show();g.visibleItems.push(a[c]);g.matchingItems.push(a[c])}else if(a[c].matching()){g.matchingItems.push(a[c]);a[c].hide()}else{a[c].hide()}}q("updated")};l=function(a,c,d){var e=this,f={};this.found=false;this.filtered=false;var h=function(a,c,d){if(c===b){if(d){e.values(a,d)}else{e.values(a)}}else{e.elm=c;var f=i.get(e,a);e.values(f)}};this.values=function(a,c){if(a!==b){for(var d in a){f[d]=a[d]}if(c!==true){i.set(e,e.values())}}else{return f}};this.show=function(){i.show(e)};this.hide=function(){i.hide(e)};this.matching=function(){return g.filtered&&g.searched&&e.found&&e.filtered||g.filtered&&!g.searched&&e.filtered||!g.filtered&&g.searched&&e.found||!g.filtered&&!g.searched};this.visible=function(){return e.elm.parentNode?true:false};h(a,c,d)};m=function(a,c){if(c.engine===b){c.engine="standard"}else{c.engine=c.engine.toLowerCase()}return new g.constructor.prototype.templateEngines[c.engine](a,c)};j.start(f,e)};e.prototype.templateEngines={};e.prototype.plugins={};e.prototype.templateEngines.standard=function(a,e){function j(a){if(a===b){var d=f.childNodes,g=[];for(var h=0,i=d.length;h<i;h++){if(d[h].data===b){return d[h]}}return null}else if(a.indexOf("<")!==-1){var j=c.createElement("div");j.innerHTML=a;return j.firstChild}else{return c.getElementById(e.item)}}var f=d.getByClass(e.listClass,a.listContainer,true),g=j(e.item),i=this;var k={created:function(a){if(a.elm===b){i.create(a)}}};this.get=function(a,b){k.created(a);var c={};for(var e=0,f=b.length;e<f;e++){var g=d.getByClass(b[e],a.elm,true);c[b[e]]=g?g.innerHTML:""}return c};this.set=function(a,b){k.created(a);for(var c in b){if(b.hasOwnProperty(c)){var e=d.getByClass(c,a.elm,true);if(e){e.innerHTML=b[c]}}}};this.create=function(a){if(a.elm!==b){return}var c=g.cloneNode(true);c.id="";a.elm=c;i.set(a,a.values())};this.remove=function(a){f.removeChild(a.elm)};this.show=function(a){k.created(a);f.appendChild(a.elm)};this.hide=function(a){if(a.elm!==b&&a.elm.parentNode===f){f.removeChild(a.elm)}};this.clear=function(){if(f.hasChildNodes()){while(f.childNodes.length>=1){f.removeChild(f.firstChild)}}}};d={getByClass:function(){if(c.getElementsByClassName){return function(a,b,c){if(c){return b.getElementsByClassName(a)[0]}else{return b.getElementsByClassName(a)}}}else{return function(a,b,d){var e=[],f="*";if(b==null){b=c}var g=b.getElementsByTagName(f);var h=g.length;var i=new RegExp("(^|\\s)"+a+"(\\s|$)");for(var j=0,k=0;j<h;j++){if(i.test(g[j].className)){if(d){return g[j]}else{e[k]=g[j];k++}}}return e}}}(),addEvent:function(a,c){if(c.addEventListener){return function(c,e,f){if(c&&!(c instanceof Array)&&!c.length&&!d.isNodeList(c)&&c.length!==0||c===a){c.addEventListener(e,f,false)}else if(c&&c[0]!==b){var g=c.length;for(var i=0;i<g;i++){d.addEvent(c[i],e,f)}}}}else if(c.attachEvent){return function(c,e,f){if(c&&!(c instanceof Array)&&!c.length&&!d.isNodeList(c)&&c.length!==0||c===a){c.attachEvent("on"+e,function(){return f.call(c,a.event)})}else if(c&&c[0]!==b){var g=c.length;for(var i=0;i<g;i++){d.addEvent(c[i],e,f)}}}}}(this,c),getAttribute:function(a,c){var d=a.getAttribute&&a.getAttribute(c)||null;if(!d){var e=a.attributes;var f=e.length;for(var g=0;g<f;g++){if(c[g]!==b){if(c[g].nodeName===c){d=c[g].nodeValue}}}}return d},isNodeList:function(a){var b=Object.prototype.toString.call(a);if(typeof a==="object"&&/^\[object (HTMLCollection|NodeList|Object)\]$/.test(b)&&(a.length==0||typeof a[0]==="object"&&a[0].nodeType>0)){return true}return false},hasClass:function(a,b){var c=this.getAttribute(a,"class")||this.getAttribute(a,"className")||"";return c.search(b)>-1},addClass:function(a,b){if(!this.hasClass(a,b)){var c=this.getAttribute(a,"class")||this.getAttribute(a,"className")||"";c=c+" "+b+" ";c=c.replace(/\s{2,}/g," ");a.setAttribute("class",c)}},removeClass:function(a,b){if(this.hasClass(a,b)){var c=this.getAttribute(a,"class")||this.getAttribute(a,"className")||"";c=c.replace(b,"");a.setAttribute("class",c)}},sorter:{alphanum:function(a,c,d){if(a===b||a===null){a=""}if(c===b||c===null){c=""}a=a.toString().replace(/&(lt|gt);/g,function(a,b){return b=="lt"?"<":">"});a=a.replace(/<\/?[^>]+(>|$)/g,"");c=c.toString().replace(/&(lt|gt);/g,function(a,b){return b=="lt"?"<":">"});c=c.replace(/<\/?[^>]+(>|$)/g,"");var e=this.chunkify(a);var f=this.chunkify(c);for(var g=0;e[g]&&f[g];g++){if(e[g]!==f[g]){var h=Number(e[g]),i=Number(f[g]);if(d){if(h==e[g]&&i==f[g]){return h-i}else{return e[g]>f[g]?1:-1}}else{if(h==e[g]&&i==f[g]){return i-h}else{return e[g]>f[g]?-1:1}}}}return e.length-f.length},chunkify:function(a){var b=[],c=0,d=-1,e=0,f,g;while(f=(g=a.charAt(c++)).charCodeAt(0)){var h=f==45||f==46||f>=48&&f<=57;if(h!==e){b[++d]="";e=h}b[d]+=g}return b}}};a.List=e;a.ListJsHelpers=d})(window)
			//]]></script>
	
	<!--headings-->
	<style type="text/css">
		body {
			min-width: 1000px;
		}
		.Section_Head {
			font-weight: bold; 
			font-size: 25px;
		}

		.Sub_Head {
			font-size: 18px;
			padding-left: .5em;
			padding-top: 1.2em;
		}

		.block {
			padding-left: 1em;
			padding-bottom: 1em;
			padding-top: 1em;
			position: relative;
		}
	</style>
	
	<!--generic-->
	<style type="text/css">
		a, a:link, a:visited, a:hover, a:active {color:#0000FF;}
		
		.columns {
			column-width: 25em;
			-webkit-column-width: 30em;
		}
		
		.hor_line {
			border-style: solid;
			margin-bottom: 1em;
			margin-top: 1em;
		}

		.list {
			list-style-type: none;
			padding-left: 1em;
		}
		
		.list_content {
			padding-left: 2em;
		}
		
		.mono {
			font-family: monospace;
		}
		
		.mono_list {
			font-family: monospace;
			list-style-type: none;
			padding-left: 3em;
		}
		
		.mono_list li {
			padding-bottom: .3em;
			padding-top: .3em;
		}
		
		p, li {
			max-width: 75%;
			word-wrap:break-word;
		}
		
		textarea { 
			resize: none;
			outline: none;
		}
	
	</style>
	
	<!--function calling conventions-->
	<style type="text/css">
		.func_type_def {
			padding-bottom: 1em;
		}
		
		.func_type_def p{
			padding-left: 1em;
		}
	</style>
	
	<!--date-->
	<style type="text/css">
		#modifiedDate {
			float: right;
			position: absolute;
			display: block;
			top: 96px;
			left: 600px;
		}
	</style>
	
	<!--functions in detail-->
	<style type="text/css">
		#funcs_detail {
		}
		
		#funcs_detail li{
			padding: 8px 0px 8px 8px;
			margin-bottom: 5px;
		}
		
		#funcs_detail p{
			padding: 5px;
			margin-left: 10px;
		}
		
		#funcs_detail li:nth-child(odd) {
			background: #E3DAC9;
		}
		
		#function_detail_search {
			float: right;
			position: absolute;
			display: block;
			top: 37px;
			left: 330px;
		}
		
		.parameters {
			padding: 0 0 0 1em;
		}
		
	</style>
	
	<!--function quick reference-->
	<style type="text/css">
		#Function_Count {
			float: right;
			position: absolute;
			display: block;
			top: 37px;
			right: 25%;
		}
		
		#function_list li {
			padding-bottom: .1em;
		}
		
		#function_list li:nth-child(odd) {
			background: #E3DAC9;
		}
		
		#function_quick_search {
			float: right;
			position: absolute;
			display: block;
			top: 37px;
			left: 330px;
		}
	</style>
	
	<!--tables-->
	<style type="text/css">
		.table-plain {
			border-collapse: collapse;
			border-spacing: 0;
			font-family: monospace;
			font-size: 100%;
			padding: 0;
			table-layout: fixed;
		}
		
		.table-plain td {
			border: 1px #555 solid;
			min-width: 50px;
			max-width: 50px;
			padding: 0px;
			text-align: center;
			vertical-align: top;
		}
	</style>
	
	<!--quick menu-->
	<style type="text/css">
		#quick_menu {
			bottom: 5px;
			float: right;
			position: fixed;
			right: 5px;
			padding: 0px 5px 0px 0px;
			z-index: 999;
		}
		#quick_menu ul {
			text-align: right;
		}
		#quick_menu li {
			min-width: 50px;
			max-width: 100%;
		}
		#quick_menu li:not(:last-child) {
			display: none;
		}
		#quick_menu:hover li:not(:last-child) {
			display: block;
		}
		@media (max-width: 1000px) {
			#quick_menu {
				background: rgba(0, 0, 0, 0.8);
			}
			#quick_menu a, #quick_menu a:link, #quick_menu a:visited, #quick_menu a:hover, #quick_menu a:active {color:#fff;}
		}
	</style>
	
	<!--tootip-->
	<style type="text/css">
		/*tooltip class for information about a certain element. Information will be held off screen until the link is hovered over*/
		.tooltip {
			border-bottom: 1px dotted #000000; color: #000000; outline: none;
			color: black !important;
			cursor: help; text-decoration: none;
			position: relative;
			margin-left: 1em;
		}
		.tooltip span {
			margin-left: -999em;
			position: absolute;
		}
		.tooltip:hover span {
			background: #9FDAEE;
			border: 1px solid #2BB0D7;
			border-radius: 5px 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px; 
			box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1); -webkit-box-shadow: 5px 5px rgba(0, 0, 0, 0.1); -moz-box-shadow: 5px 5px rgba(0, 0, 0, 0.1);
			font-family: Calibri, Tahoma, Geneva, sans-serif;
			position: absolute; left: -7em; top: 2em; z-index: 99;
			margin-left: 0; width: 275px;
			padding: 0.5em 0.8em 0.8em 2em;
		}
	</style>
	
</head>

<body>
	<div id="quick_menu" >
		<ul class="list">
			<li><a href="#Function_Quick_Reference" title="">Function Quick Reference</a></li>
			<li><a href="#Function_Syntax_Format">Function Syntax Format</a></li>
			<li><a href="#Function_Calling_Conventions">Function Calling Conventions</a></li>
			<li><a href="#Bit_Value_Notation">Bit Value Notation</a></li>
			<li><a href="#Functions_In_Detail">Functions in Detail</a></li>
			<li><a href="#FormatSpecifiers">Format Specifiers</a></li>
			<li><a href="#Type_Codes">Type Codes</a></li>
			<li><a href="#top" title="Click to go to top">To Top</a></li>
		</ul>
	</div>
	
	<a name="top" href="#top"></a>
	
	<div class="block"><!--Table of Contents-->
		<h1>Fallout: New Vegas Script Extender Command Documentation</h1>
		<strong>Table of Contents</strong>
		<ul class="table_of_contents">
			<li><a href="#Function_Quick_Reference">Function
			Quick Reference</a></li>
			<li><a href="#Function_Syntax_Format">Function Syntax Format</a></li>
			<li><a href="#Function_Calling_Conventions">Function Calling Conventions</a></li>
			<li><a href="#Bit_Value_Notation">Bit Value Notation</a></li>
			<li><a href="#Functions_In_Detail">Functions in Detail</a></li>
			<li><a href="#FormatSpecifiers">Format Specifiers</a></li>
			<li><a href="#Type_Codes">Type Codes</a></li>
			<ul class="table_of_contents">
				<li><a href="#Form_Type_IDs">Form Type IDs</a></li>
				<li><a href="#Equip_Type">Equip Type</a></li>
				<li><a href="#Equipment_Slot_IDs">Equipment Slot IDs</a></li>
				<li><a href="#Weapon_Flags_1">Weapon Flags 1</a></li>
				<li><a href="#Weapon_Flags_2">Weapon Flags 2</a></li>
				<li><a href="#Weapon_Hand_Grips">Weapon Hand Grips</a></li>
				<li><a href="#Weapon_Mod_Effect">Weapon Mod Effect</a></li>
				<li><a href="#Weapon_Mod_Flags">Weapon Mod Flags</a></li>
				<li><a href="#Mod_Index">Weapon Mod Index</a></li>
				<li><a href="#Weapon_Type">Weapon Type</a></li>
				<li><a href="#Attack_Animations">Attack Animations</a></li>
				<li><a href="#Reload_Animations">Reload Animations</a></li>
				<li><a href="#Actor_Flags_High">Actor Flags High</a></li>
				<li><a href="#Actor_Flags_Low">Actor Flags Low</a></li>
				<li><a href="#Actor_Value_Codes">Actor Value Codes</a></li>
				<li><a href="#ControlCodes">Control Codes</a></li>
				<li><a href="#DirectX_Scancodes">DirectX Scancodes</a></li>
			</ul>
			<li><a href="#Additional_Resources">Additional Resources</a></li>
		</ul>
		<div id="modifiedDate"></div>
	</div>
	
	<hr class="hor_line" />
	
	<div class="block"><!--Function Quick Reference-->
		<p><span class="Section_Head"><a name="Function_Quick_Reference" id="Function_Quick_Reference"></a>Function Quick Reference</span></p>
		<div id="Function_Count">Total Functions: <span id="myResults"></span></div>
		<div id="quick-reference-list">
			<div  id="function_quick_search">
				<input class="search" placeholder="Filter" /><a class="tooltip" href="#" onclick="return false">Information<span class="critical">You can use this search field to filter the functions by their name. Type the name or part of the name of a function to filter.</span></a>
				<!--<input type="button" value="List functions" onclick=""document.forms['search'].search.value = 'list'; return false;"">-->
			</div>
			<ul class="mono list" id="function_list">
				<li>(nothing) <span class="function"><a href="#AddSpellNS">AddSpellNS</a></span> spell:SpellItem</li>
				<li>(Reference) <span class="function"><a href="#BuildRef">BuildRef</a></span> modIndex:Integer itemID:Integer</li>
				<li>(Float) <span class="function"><a href="#Ceil">Ceil</a></span> float:Float</li>
				<li>(Integer) <span class="function"><a href="#ClearBit">ClearBit</a></span> int:Integer int:Integer <i>int:Integer</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#CompareNames">CompareNames</a></span> inv item:GenericObject <i>target item:GenericObject</i></li>
				<li>(nothing) <span class="function"><a href="#con_CloseAllMenus">con_CloseAllMenus</a></span></li>
				<li>(IntegerOrFloat) <span class="function"><a href="#con_GetINISetting">con_GetINISetting</a></span> String:String</li>
				<li>(nothing) <span class="function"><a href="#con_LoadGame">con_LoadGame</a></span> String:String <i>Integer (Optional):Integer</i></li>
				<li>(nothing) <span class="function"><a href="#con_QuitGame">con_QuitGame</a></span></li>
				<li>(nothing) <span class="function"><a href="#con_RefreshINI">con_RefreshINI</a></span></li>
				<li>(nothing) <span class="function"><a href="#con_SetCameraFOV">con_SetCameraFOV</a></span> <i>Float (Optional):Float</i> <i>Float (Optional):Float</i></li>
				<li>(nothing) <span class="function"><a href="#con_SetGameSetting">con_SetGameSetting</a></span> String:String String:String</li>
				<li>(nothing) <span class="function"><a href="#con_SetINISetting">con_SetINISetting</a></span> String:String String:String</li>
				<li>(nothing) reference.<span class="function"><a href="#con_SetVel">con_SetVel</a></span> Axis:Axis Float:Float</li>
				<li>(nothing) <span class="function"><a href="#con_Save">con_Save</a></span> String:String <i>Integer (Optional):Integer</i></li>
				<li>(nothing) <span class="function"><a href="#con_SaveINI">con_SaveINI</a></span></li>
				<li>(nothing) <span class="function"><a href="#con_TCL">con_TCL</a></span></li>
				<li>(nothing) <span class="function"><a href="#con_TFC">con_TFC</a></span></li>
				<li>(nothing) <span class="function"><a href="#con_ToggleMenus">con_ToggleMenus</a></span></li>
				<li>(Bool) reference.<span class="function"><a href="#CopyIR">CopyIR</a></span> container:ref</li>
				<li>(nothing) <span class="function"><a href="#DebugPrint">DebugPrint</a></span> format string:String <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i><i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i>	<i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i>	<i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i></li>
				<li>(nothing) <span class="function"><a href="#DisableControl">DisableControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(nothing) <span class="function"><a href="#DisableKey">DisableKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(nothing) <span class="function"><a href="#EnableControl">EnableControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(nothing) <span class="function"><a href="#EnableKey">EnableKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(Float) <span class="function"><a href="#Exp">Exp</a></span> float:Float</li>
				<li>(Float) <span class="function"><a href="#Floor">Floor</a></span> float:Float</li>
				<li>(Float) <span class="function"><a href="#fmod">fmod</a></span> x:Float n:Float <i>offset:Float</i></li>
				<li>(<span class="function"><a href="#Actor_Flags_High">actorFlags:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetActorBaseFlagsHigh">GetActorBaseFlagsHigh</a></span> <i>actorBase:ref</i></li>
				<li>(<span class="function"><a href="#Actor_Flags_Low">actorFlags:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetActorBaseFlagsLow">GetActorBaseFlagsLow</a></span> <i>actorBase:ref</i></li>
				<li>(<span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span>)	<span class="function"><a href="#GetAltControl">GetAltControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetAmmoCasing">GetAmmoCasing</a></span> item:InventoryObject</li>
				<li>(Float) reference.<span class="function"><a href="#GetAmmoConsumedPercent">GetAmmoConsumedPercent</a></span> item:InventoryObject</li>
				<li>(Float) reference.<span class="function"><a href="#GetAmmoSpeed">GetAmmoSpeed</a></span> item:InventoryObject</li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetArmorAR">GetArmorAR</a></span>	<i>item:InventoryObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetArmorDT">GetArmorDT</a></span>	<i>item:InventoryObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetAttackDamage">GetAttackDamage</a></span> <i>item:InventoryObject</i></li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetBaseObject">GetBaseObject</a></span></li>
				<li>(<span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span>) <span class="function"><a href="#GetControl">GetControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(Reference) <span class="function"><a href="#GetCrosshairRef">GetCrosshairRef</a></span></li>
				<li>(Float) reference.<span class="function"><a href="#GetCurrentHealth">GetCurrentHealth</a></span></li>
				<li>(Bool) <span class="function"><a href="#GetDebugMode">GetDebugMode</a></span>	<i>int:Integer</i></li>
				<li>(Reference) <span class="function"><a href="#GetDebugSelection">GetDebugSelection</a></span> <i>int:Integer</i></li>
				<li>(Float) reference.<span class="function"><a href="#GetEquippedCurrentHealth">GetEquippedCurrentHealth</a></span> int:Integer</li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetEquippedObject">GetEquippedObject</a></span>	<span class="function"><a href="#Equipment_Slot_IDs">atIndex:Integer</a></span></li>
				<li>(Integer) reference.<span class="function"><a href="#GetEquippedWeaponModFlags">GetEquippedWeaponModFlags</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Equip_Type">equipType:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetEquipType">GetEquipType</a></span> <i>item:InventoryObject</i></li>
				<li>(Reference) <span class="function"><a href="#GetFirstRef">GetFirstRef</a></span> <i><span class="function"><a href="#Form_Type_IDs"><i>form type:Integer</i></a></span></i> <i>cell depth:Integer</i> <i>include taken refs:Bool</i></li>
				<li>(Reference) <span class="function"><a href="#GetFirstRefInCell">GetFirstRefInCell</a></span> cell:Cell <i><span class="function"><a href="#Form_Type_IDs"><i>form type:Integer</i></a></span></i> <i>cell depth:Integer</i> <i>include taken refs:Bool</i></li>
				<li>(Bool) <span class="function"><a href="#GetGameLoaded">GetGameLoaded</a></span></li>
				<li>(Bool) <span class="function"><a href="#GetGameRestarted">GetGameRestarted</a></span></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetHealth">GetHealth</a></span> <i>item:GenericObject</i></li>
				<li>(BaseForm) <span class="function"><a href="#GetHotkeyItem">GetHotkeyItem</a></span> int:Integer</li>
				<li>(Reference) reference.<span class="function"><a href="#GetInventoryObject">GetInventoryObject</a></span> index:Integer</li>
				<li>(<span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span>) <span class="function"><a href="#GetKeyPress">GetKeyPress</a></span> int:Integer</li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetLinkedDoor">GetLinkedDoor</a></span></li>
				<li>(Integer) <span class="function"><a href="#GetModIndex">GetModIndex</a></span> string:String</li>
				<li>(<span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span>) <span class="function"><a href="#GetMouseButtonPress">GetMouseButtonPress</a></span> int:Integer</li>
				<li>(Reference) <span class="function"><a href="#GetNextRef">GetNextRef</a></span></li>
				<li>(IntegerOrFloat) <span class="function"><a href="#GetNumericGameSetting">GetNumericGameSetting</a></span> string:String</li>
				<li>(IntegerOrFloat) <span class="function"><a href="#GetNumericIniSetting">GetNumericIniSetting</a></span> string:String</li>
				<li>(Integer) reference.<span class="function"><a href="#GetNumItems">GetNumItems</a></span></li>
				<li>(Integer) <span class="function"><a href="#GetNumKeysPressed">GetNumKeysPressed</a></span></li>
				<li>(Integer) <span class="function"><a href="#GetNumLoadedMods">GetNumLoadedMods</a></span></li>
				<li>(Integer) <span class="function"><a href="#GetNumRefs">GetNumRefs</a></span> <i><span class="function"><a href="#Form_Type_IDs"><i>form type:Integer</i></a></span></i> <i>cell depth:Integer</i> <i>include taken refs:Bool</i></li>
				<li>(Integer) <span class="function"><a href="#GetNumRefsInCell">GetNumRefsInCell</a></span> cell:Cell <i><span class="function"><a href="#Form_Type_IDs"><i>form type:Integer</i></a></span></i> <i>cell depth:Integer</i> <i>include taken refs:Bool</i></li>
				<li>(count:Integer) <span class="function"><a href="#GetNumMouseButtonsPressed">GetNumMouseButtonsPressed</a></span></li>
				<li>(Integer) <span class="function"><a href="#GetNVSEVersion">GetNVSEVersion</a></span></li>
				<li>(Integer) <span class="function"><a href="#GetNVSERevision">GetNVSERevision</a></span></li>
				<li>(Integer) <span class="function"><a href="#GetNVSEBeta">GetNVSEBeta</a></span></li>
				<li>(BaseForm) <i>reference.</i><span class="function"><a href="#GetObjectEffect">GetObjectEffect</a></span> <i>item:InventoryObject</i></li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetOpenKey">GetOpenKey</a></span></li>
				<li>(Reference) reference.<span class="function"><a href="#GetOwner">GetOwner</a></span></li>
				<li>(Integer) reference.<span class="function"><a href="#GetOwningFactionRequiredRank">GetOwningFactionRequiredRank</a></span></li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetParentCell">GetParentCell</a></span></li>
				<li>(Reference) reference.<span class="function"><a href="#GetParentCellOwner">GetParentCellOwner</a></span></li>
				<li>(Integer) reference.<span class="function"><a href="#GetParentCellOwningFactionRequiredRank">GetParentCellOwningFactionRequiredRank</a></span></li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetParentWorldspace">GetParentWorldspace</a></span></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetPlayerCurrentAmmoRounds">GetPlayerCurrentAmmoRounds</a></span></li>
				<li>(Integer) reference.<span class="function"><a href="#GetRefCount">GetRefCount</a></span></li>
				<li>(FormList) <i>reference.</i><span class="function"><a href="#GetRepairList">GetRepairList</a></span> <i>item:InventoryObject</i></li>
				<li>(BaseForm) <i>reference.</i><span class="function"><a href="#GetScript">GetScript</a></span> <i>item:GenericObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetSourceModIndex">GetSourceModIndex</a></span> <i>item:GenericObject</i></li>
				<li>(BaseForm) reference.<span class="function"><a href="#GetTeleportCell">GetTeleportCell</a></span></li>
				<li>(<span class="function"><a href="#Form_Type_IDs">formType:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetType">GetType</a></span> <i>item:GenericObject</i></li>
				<li>(Float) <span class="function"><a href="#GetUIFloat">GetUIFloat</a></span> string:String</li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetValue">GetValue</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeight">GetWeight</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponActionPoints">GetWeaponActionPoints</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponAimArc">GetWeaponAimArc</a></span> <i>item:InventoryObject</i></li>
				<li>(BaseForm) <i>reference.</i><span class="function"><a href="#GetWeaponAmmo">GetWeaponAmmo</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponAmmoUse">GetWeaponAmmoUse</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponAnimAttackMult">GetWeaponAnimAttackMult</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponAnimJamTime">GetWeaponAnimJamTime</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponAnimMult">GetWeaponAnimMult</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponAnimReloadTime">GetWeaponAnimReloadTime</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponAnimShotsPerSec">GetWeaponAnimShotsPerSec</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Attack_Animations">attackAnimation:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponAttackAnimation">GetWeaponAttackAnimation</a></span> <i>item:InventoryObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetWeaponBaseVATSChance">GetWeaponBaseVATSChance</a></span> <i>item:InventoryObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetWeaponClipRounds">GetWeaponClipRounds</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponCritChance">GetWeaponCritChance</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponCritDamage">GetWeaponCritDamage</a></span> <i>item:InventoryObject</i></li>
				<li>(BaseForm) <i>reference.</i><span class="function"><a href="#GetWeaponCritEffect">GetWeaponCritEffect</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponFireDelayMin">GetWeaponFireDelayMin</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponFireDelayMax">GetWeaponFireDelayMax</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponFireRate">GetWeaponFireRate</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Weapon_Flags_1">weaponFlags:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponFlags1">GetWeaponFlags1</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Weapon_Flags_2">weaponFlags:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponFlags2">GetWeaponFlags2</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Weapon_Hand_Grips">handGrip:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponHandGrip">GetWeaponHandGrip</a></span>	<i>item:InventoryObject</i></li>
				<li>(Bool) <i>reference.</i><span class="function"><a href="#GetWeaponHasScope">GetWeaponHasScope</a></span> <i>item:InventoryObject</i></li>
				<li>(Bool) <i>reference.</i><span class="function"><a href="#GetWeaponIsAutomatic">GetWeaponIsAutomatic</a></span> <i>item:InventoryObject</i></li>
				<li>(BaseForm) <i>reference.</i><span class="function"><a href="#GetWeaponItemMod">GetWeaponItemMod</a></span> <span class="function"><a href="#Mod_Index">modIndex:Integer</a></span> item:InventoryObject</li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponLimbDamageMult">GetWeaponLimbDamageMult</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponLongBursts">GetWeaponLongBursts</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponMaxRange">GetWeaponMaxRange</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponMinRange">GetWeaponMinRange</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponMinSpread">GetWeaponMinSpread</a></span> <i>item:InventoryObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetWeaponNumProjectiles">GetWeaponNumProjectiles</a></span> <i>item:InventoryObject</i></li>
				<li>(BaseForm) <i>reference.</i><span class="function"><a href="#GetWeaponProjectile">GetWeaponProjectile</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponReach">GetWeaponReach</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Reload_Animations">reloadAnim:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponReloadAnim">GetWeaponReloadAnim</a></span> <i>item:InventoryObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetWeaponRequiredSkill">GetWeaponRequiredSkill</a></span> <i>item:InventoryObject</i></li>
				<li>(Integer) <i>reference.</i><span class="function"><a href="#GetWeaponRequiredStrength">GetWeaponRequiredStrength</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Actor_Value_Codes">resistValue:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponResistType">GetWeaponResistType</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponRumbleDuration">GetWeaponRumbleDuration</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponRumbleLeftMotor">GetWeaponRumbleLeftMotor</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponRumbleRightMotor">GetWeaponRumbleRightMotor</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponRumbleWavelength">GetWeaponRumbleWavelength</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponSightFOV">GetWeaponSightFOV</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponSightUsage">GetWeaponSightUsage</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Actor_Value_Codes">weaponSkill:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponSkill">GetWeaponSkill</a></span> <i>item:InventoryObject</i></li>
				<li>(Float) <i>reference.</i><span class="function"><a href="#GetWeaponSpread">GetWeaponSpread</a></span> <i>item:InventoryObject</i></li>
				<li>(<span class="function"><a href="#Weapon_Type">weaponType:Integer</a></span>) <i>reference.</i><span class="function"><a href="#GetWeaponType">GetWeaponType</a></span> <i>item:InventoryObject</i></li>
				<li>(nothing) <span class="function"><a href="#Goto">Goto</a></span> <i>int:Integer</i></li>
				<li>(nothing) <span class="function"><a href="#HoldKey">HoldKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(Bool) <i>reference.</i><span class="function"><a href="#IsClonedForm">IsClonedForm</a></span> <i>item:GenericObject</i></li>
				<li>(Bool) <span class="function"><a href="#IsControl">IsControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(Bool) <span class="function"><a href="#IsControlDisabled">IsControlDisabled</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(Bool) <span class="function"><a href="#IsControlPressed">IsControlPressed</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(Bool) <i>reference.</i><span class="function"><a href="#IsFormValid">IsFormValid</a></span> <i>item:InventoryObject</i></li>
				<li>(Bool) <span class="function"><a href="#IsKeyDisabled">IsKeyDisabled</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(Bool) <span class="function"><a href="#IsKeyPressed">IsKeyPressed</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span> <i>int:Integer</i></li>
				<li>(Bool) <span class="function"><a href="#IsModLoaded">IsModLoaded</a></span> string:String</li>
				<li>(Bool) reference.<span class="function"><a href="#IsPersistent">IsPersistent</a></span></li>
				<li>(Bool) <i>reference.</i><span class="function"><a href="#IsPowerArmor">IsPowerArmor</a></span> <i>item:InventoryObject</i></li>
				<li>(Bool) <i>reference.</i><span class="function"><a href="#IsQuestItem">IsQuestItem</a></span> <i>item:GenericObject</i></li>
				<li>(Bool) <span class="function"><a href="#IsReference">IsReference</a></span> reference:ObjectRef</li>
				<li>(Integer) <span class="function"><a href="#IsRefInList">IsRefInList</a></span> form list:FormList form:GenericObject</li>
				<li>(Bool) <i>reference.</i><span class="function"><a href="#IsScripted">IsScripted</a></span> <i>item:GenericObject</i></li>
				<li>(nothing) <span class="function"><a href="#Label">Label</a></span> <i>int:Integer</i></li>
				<li>(Integer) <span class="function"><a href="#LeftShift">LeftShift</a></span> int:Integer int:Integer</li>
				<li>(addedAtIndex:Integer) reference.<span class="function form_list"><a href="#ListAddReference">ListAddReference</a></span> form list:FormList <i>index:Integer</i></li>
				<li>(addedAtIndex:Integer) <span class="function form_list"><a href="#ListAddForm">ListAddForm</a></span> form list:FormList form:GenericObject <i>index:Integer</i></li>
				<li>(Integer) <span class="function form_list"><a href="#ListGetCount">ListGetCount</a></span> form list:FormList</li>
				<li>(BaseForm) <span class="function form_list"><a href="#ListGetNthForm">ListGetNthForm</a></span> form list:FormList index:Integer</li>
				<li>(Integer) <span class="function form_list"><a href="#ListGetFormIndex">ListGetFormIndex</a></span> form list:FormList form:GenericObject</li>
				<li>(oldIndex:Integer) <span class="function form_list"><a href="#ListRemoveForm">ListRemoveForm</a></span> form list:FormList form:GenericObject</li>
				<li>(removedForm:BaseForm) <span class="function"><a href="#ListRemoveNthForm">ListRemoveNthForm</a></span> form list:FormList <i>index:Integer</i></li>
				<li>(oldIndex:Integer) <span class="function form_list"><a href="#ListReplaceForm">ListReplaceForm</a></span> form list:FormList replaceWith:GenericObject formToReplace:GenericObject</li>
				<li>(oldForm:BaseForm) <span class="function form_list"><a href="#ListReplaceNthForm">ListReplaceNthForm</a></span> form list:FormList replaceWith:GenericObject <i>formIndex:Integer</i></li>
				<li>(Float) <span class="function"><a href="#Log10">Log10</a></span> float:Float</li>
				<li>(Integer) <span class="function"><a href="#LogicalAnd">LogicalAnd</a></span> int:Integer int:Integer</li>
				<li>(Integer) <span class="function"><a href="#LogicalNot">LogicalNot</a></span> int:Integer</li>
				<li>(Integer) <span class="function"><a href="#LogicalOr">LogicalOr</a></span> int:Integer int:Integer</li>
				<li>(Integer) <span class="function"><a href="#LogicalXor">LogicalXor</a></span> int:Integer int:Integer</li>
				<li>(nothing) <span class="function"><a href="#MenuHoldKey">MenuHoldKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(nothing) <span class="function"><a href="#MenuReleaseKey">MenuReleaseKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(nothing) <span class="function"><a href="#MenuTapKey">MenuTapKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(nothing) <span class="function"><a href="#MessageBoxEx">MessageBoxEx</a></span> format string:String <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i></li>
				<li>(nothing) <span class="function"><a href="#MessageEx">MessageEx</a></span> format string:String <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i></li>
				<li>(nothing) <span class="function"><a href="#PrintActiveTile">PrintActiveTile</a></span></li>
				<li>(nothing) <span class="function"><a href="#PrintToConsole">PrintToConsole</a></span> format string:String <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i></li>
				<li>(Float) <span class="function"><a href="#Rand">Rand</a></span> min:Float max:Float</li>
				<li>(nothing) <span class="function"><a href="#ReleaseKey">ReleaseKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(oldScript:BaseForm) <i>reference.</i><span class="function"><a href="#RemoveScript">RemoveScript</a></span> <i>item:GenericObject</i></li>
				<li>(Integer) <span class="function"><a href="#RightShift">RightShift</a></span> int:Integer int:Integer</li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetActorBaseFlagsHigh">SetActorBaseFlagsHigh</a></span> <span class="function"><a href="#Actor_Flags_High">actorFlags:Integer</a></span> <i>actorBase:ref</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetActorBaseFlagsLow">SetActorBaseFlagsLow</a></span> <span class="function"><a href="#Actor_Flags_Low">actorFlags:Integer</a></span> <i>actorBase:ref</i></li>
				<li>(nothing) <span class="function"><a href="#SetAltControl">SetAltControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetAttackDamage">SetAttackDamage</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetArmorAR">SetArmorAR</a></span>	newArmorRating:int <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetArmorDT">SetArmorDT</a></span>	newArmorRating:int <i>item:InventoryObject</i></li>
				<li>(nothing) <span class="function"><a href="#SetBaseItemValue">SetBaseItemValue</a></span> form:InventoryObject newValue:Integer</li>
				<li>(Integer) <span class="function"><a href="#SetBit">SetBit</a></span> int:Integer int:Integer <i>int:Integer</i></li>
				<li>(nothing) <span class="function"><a href="#SetControl">SetControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(nothing) reference.<span class="function"><a href="#SetCurrentHealth">SetCurrentHealth</a></span> newHealth:Float</li>
				<li>(nothing) <span class="function"><a href="#SetDebugMode">SetDebugMode</a></span> int:Integer <i>int:Integer</i></li>
				<li>(nothing) reference.<span class="function"><a href="#SetEquippedCurrentHealth">SetEquippedCurrentHealth</a></span> val:Float slot:Integer</li>
				<li>(nothing) reference.<span class="function"><a href="#SetEquippedWeaponModFlags">SetEquippedWeaponModFlags</a></span> modFlags:Integer</li>
				<li>(nothing) <i>reference</i>.<span class="function"><a href="#SetHealth">SetHealth</a></span> newHealth:Integer <i>item:GenericObject</i></li>
				<li>(nothing) <span class="function"><a href="#SetIsControl">SetIsControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetIsPowerArmor">SetIsPowerArmor</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetName">SetName</a></span> string:String <i>item:GenericObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetNameEx">SetNameEx</a></span> format string:String <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>variable:Float</i> <i>item:GenericObject</i></li>
				<li>(nothing) <span class="function"><a href="#SetNumericGameSetting">SetNumericGameSetting</a></span> string:String float:Float</li>
				<li>(nothing) <span class="function"><a href="#SetNumericIniSetting">SetNumericIniSetting</a></span> string:String float:Float</li>
				<li>(nothing) <span class="function"><a href="#SetPlayerCurrentAmmoRounds">SetPlayerCurrentAmmoRounds</a></span> int:Integer</li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetQuestItem">SetQuestItem</a></span> isQuestItem:bool <i>item:GenericObject</i></li>
				<li>(nothing) reference.<span class="function"><a href="#SetRefCount">SetRefCount</a></span> newCount:Integer</li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetRepairList">SetRepairList</a></span> form list:FormList <i>target item:InventoryObject</i></li>
				<li>(oldScript:BaseForm) <i>reference.</i><span class="function"><a href="#SetScript">SetScript</a></span> magic item:GenericObject <i>item:GenericObject</i></li>
				<li>(nothing) <span class="function"><a href="#SetUIFloat">SetUIFloat</a></span> string:String float:Float</li>
				<li>(nothing) <span class="function"><a href="#SetUIString">SetUIString</a></span> string:String string:String</li>
				<li>(nothing) <span class="function"><a href="#SetUIStringEx">SetUIStringEx</a></span> string:String format string:String</li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponActionPoints">SetWeaponActionPoints</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponAimArc">SetWeaponAimArc</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponAmmo">SetWeaponAmmo</a></span> inv item:MagicItem <i>target item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponAmmoUse">SetWeaponAmmoUse</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponAnimAttackMult">SetWeaponAnimAttackMult</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponAnimMult">SetWeaponAnimMult</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponAttackAnimation">SetWeaponAttackAnimation</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponBaseVATSChance">SetWeaponBaseVATSChance</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponClipRounds">SetWeaponClipRounds</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponCritChance">SetWeaponCritChance</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponCritDamage">SetWeaponCritDamage</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(oldCriticalEffect:BaseForm) <i>reference.</i><span class="function"><a href="#SetWeaponCritEffect">SetWeaponCritEffect</a></span> magic item:MagicItem <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponFireRate">SetWeaponFireRate</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponFlags1">SetWeaponFlags1</a></span> int:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponFlags2">SetWeaponFlags2</a></span> int:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponHandGrip">SetWeaponHandGrip</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponIsAutomatic">SetWeaponIsAutomatic</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponLimbDamageMult">SetWeaponLimbDamageMult</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponLongBursts">SetWeaponLongBursts</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponMaxRange">SetWeaponMaxRange</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponMinRange">SetWeaponMinRange</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponMinSpread">SetWeaponMinSpread</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponNumProjectiles">SetWeaponNumProjectiles</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponProjectile">SetWeaponProjectile</a></span> inv item:MagicItem <i>target item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponReach">SetWeaponReach</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponReloadAnim">SetWeaponReloadAnim</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponRequiredSkill">SetWeaponRequiredSkill</a></span> newSkill:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponRequiredStrength">SetWeaponRequiredStrength</a></span> newStrength:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponResistType">SetWeaponResistType</a></span> <span class="function"><a href="#Actor_Value_Codes">resistValue:Integer</a></span> <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponSkill">SetWeaponSkill</a></span> <span class="function"><a href="#Actor_Value_Codes">WeaponSkill:Integer</a></span> <i>item:InventoryObject</i></li>
				<li><span  class="function_name">(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponSpread">SetWeaponSpread</a></span> float:Float <i>item:InventoryObject</i></span></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponSightFOV">SetWeaponSightFOV</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponSightUsage">SetWeaponSightUsage</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeaponType">SetWeaponType</a></span> path type:Integer <i>item:InventoryObject</i></li>
				<li>(nothing) <i>reference.</i><span class="function"><a href="#SetWeight">SetWeight</a></span> float:Float <i>item:InventoryObject</i></li>
				<li>(nothing) <span class="function"><a href="#SortUIListBox">SortUIListBox</a></span> string:String string:String</li>
				<li>(nothing) <span class="function"><a href="#TapControl">TapControl</a></span> <span class="function"><a href="#ControlCodes">controlCode:Integer</a></span></li>
				<li>(nothing) <span class="function"><a href="#TapKey">TapKey</a></span> <span class="function"><a href="#DirectX_Scancodes">scanCode:Integer</a></span></li>
				<li>(clonedForm:BaseForm) <i>reference.</i><span class="function"><a href="#TempCloneForm">TempCloneForm</a></span> <i>item:GenericObject</i></li>
			</ul>
		</div>
		
		<script type="text/Javascript">
			var numitems = $("#function_list li").length + 1;
			$("#myResults").html(numitems);
		</script>
		<script type="text/javascript">
			var options = {
				valueNames: [ 'function' ]
			};
			var featureList = new List('quick-reference-list', options);
		</script>
	</div>
	
	<hr class="hor_line" />
	
	<div class="block"><!--Function Syntax Format-->
		<p><span class="Section_Head"><a name="Function_Syntax_Format" id="Function_Syntax_Format"></a>Function Syntax Format</span></p>

		<p><span class="mono">(ReturnType) reference.FunctionName requiredParameter1:Type <i>optionalParameter2:Type</i></span></p>
		
		<p><strong>Return Type</strong>: the type of value the function Returns. Sometimes this will also have a descriptive name, if the return value is not obvious based on the function definition.</p>
		
		<p><strong>reference</strong>: If in plain text a required reference the function must be called upon. In an object script the object the	script is attached to is considered the implicit reference for the function. If italicized, the reference is optional but can be used to identify the object for the function to use. Usually the optional reference is teamed with an optional last argument which takes the place of the optional reference if used.</p>
		
		<p><strong>FunctionName:</strong> the main name of the function and a link to the function details.</p>
		
		<p><strong>requiredParameter:Type:</strong> a parameter in plain text is a required parameter that must be provided. The Type is the type of parameter needed.</p>
		
		<p><strong>optionalParameter:Type:</strong> a parameter in italics is an optional parameter which can be provided. If not provided, a default value is used in its place.</p>
		
		<p><strong>Parameter and Return Types</strong></p>
		<ul id="list">
			<li>Bool - an integer with a value of 0 (false) or 1 (true)</li>
			<li>Float - a positive or negative floating point number</li>
			<li>Integer - a positive integral number</li>
			<li>IntegerOrFloat - either an integer or a float</li>
			<li>BaseForm - a base form type whose values apply to all instances of that form</li>
			<li>ObjectRef - a specific instance of a base form type</li>
			<li>GenericObject - a base form object type. Frequently used when passing a form type which has no specific parameter type. As such the form identifier is first placed in a ref variable and that ref variable is used as the parameter.</li>
			<li>InventoryObject - a base form object type which can be placed in an Inventory (weapon, armor, aid, misc item)</li>
			<li>MagicItem - a base effect form.</li>
		</ul>
	</div>
	
	<hr class="hor_line" />
	
	<div class="block"><!--Function Calling Conventions-->
		<p><span class="Section_Head"><a name="Function_Calling_Conventions" id="Function_Calling_Conventions"></a>Function Calling Conventions</span></p>
		
			<p>Fallout scripting functions are generally called on either a reference or by passing	in a base form (either the EditorName of the base form or the base form in a reference variable.)</p>
		
		<div class="func_type_def">
			<strong><a name="ByReference" id="ByReference"></a>Calling By Reference (R):</strong><br />
			<p>
				<span class="mono">Syntax Example: <i>reference.</i><strong>FunctionName</strong> someParameters</span><br />
				Examples:
			</p>
			<p>
				<textarea class="mono" rows="3" cols="70" readonly>; get the base object of a given reference&#13;&#10;ref baseObject&#13;&#10;set baseObject to reference.GetBaseObject</textarea>
			</p>
			<p>or</p>
			<p>
				<textarea class="mono" rows="3" cols="70" readonly>; get the current health of the player's equipped weapon&#13;&#10;float weaponHealth&#13;&#10;set weaponHealth to player.GetEquippedCurrentHealth 5</textarea>
			</p>
			<p>Functions with this calling convention use the reference to collect important information. All scripts running on an object or an actor reference have an implicit reference to that actor which will be used if another reference is not specified.</p>
		</div>

		<div class="func_type_def">
			<strong><a name="ByBaseForm" id="ByBaseForm"></a>Calling By Base Form (B):</strong><br />
			<p>
				<span class="mono">Syntax Example: <strong>FunctionName</strong> someParameters objectID:ref</span><br />
				Examples:
			</p>
			<p>
				<textarea class="mono" rows="3" cols="70" readonly>; get the form at index 2 (3rd item) of the Alcholic Drinks form list&#13;&#10;ref form&#13;&#10;set form to ListGetNthForm AlchohlicDrinks 2</textarea>
			</p>
			<p>Most Fallout scripting functions use	this calling convention, where all information is passed into the function as a parameter. These parameters can be base forms, integers, floats, form lists or references. Base forms can either be passed in using the Editor Name directly, or the base form could be put into a reference variable first. In some documentation you will see the term ObjectID rather than Base Form - these terms are mostly interchangeable.</p>
		</div>
		
		<div class="func_type_def">
			<strong><a name="ByEither" id="ByEither"></a>Calling by Either Reference or Base Form	(E):</strong><br />
			<p>
				<span class="mono">Syntax Example: <i>reference.</i><strong>FunctionName</strong> someParameters <i>objectID:ref</i></span><br />
				Examples:
			</p>
			<p>
				<textarea class="mono" rows="3" cols="70" readonly>int health&#13;&#10;ref weaponBaseForm&#13;&#10;set health to GetHealth weaponBaseForm</textarea>
			</p>
			<p>or</p>
			<p>
				<textarea class="mono" rows="3" cols="70" readonly>int health&#13;&#10;ref droppedWeaponRef&#13;&#10;set health to weaponRef.GetHealth</textarea>
			</p>
			<p>Many NVSE functions can be called using either Reference or Base Form syntax. These functions will have an optional calling reference and the last argument will be an optional object or form parameter. These functions will use the last optional base form argument to identify the form to act upon if provided, but if not provided will act upon the base form of the calling reference (if any). This provides a single function which can be used either with a reference to an instance of an object, or on the base form itself.</p>
		</div>
	</div>
	
	<hr class="hor_line" />
	
	<div class="block"><!--Bit Value Notation-->
		<p><span class="Section_Head"><a name="Bit_Value_Notation" id="Bit_Value_Notation"></a>Bit Value Notation</span></p>
		
		<p>Bit value notation is used by several new functions to pass multiple values to or from a single function, to act on a single form. It is an integer representaion of a binary number. A binary number uses the values of 0 and 1 (base 2) and therefore a value is either on or off.</p>

		<p>Representing a number in bit value is very easy. To get any number you simply add each bit together until you get the value you need. Use the below table to help you figure this out. The first row is the integer value, the second row is the actual bit value of that integer. That is, the numbering system starts at 0 and progresses up.</p>
		
		<p>
			<table  class="table-plain"><tr>	<td>32768</td>	<td>16384</td>	<td>8192</td>	<td>4096</td>	<td>2048</td>	<td>1024</td>	<td>512</td>	<td>256</td>	<td>128</td>	<td>64</td>	<td>32</td>	<td>16</td>	<td>8</td>	<td>4</td>	<td>2</td>	<td>1</td></tr>
			<tr>	<td>15</td>	<td>14</td>	<td>13</td>	<td>12</td>	<td>11</td>	<td>10</td>	<td>9</td>	<td>8</td>	<td>7</td>	<td>6</td>	<td>5</td>	<td>4</td>	<td>3</td>	<td>2</td>	<td>1</td>	<td>0</td></tr></table>
		</p>
		
		<p>
			<strong>Example:</strong> If we want to set the weapon flags of a weapon to say that it is automatic, and has a scope, we would first check out the <a href="#Weapon_Flags_1">Weapon Flags</a> values to see what we need to set. Here we want to set flag 2 and flag 4. To do this we simply add 2 and 4 together, which is 6. So the function would look like:
			<textarea class="mono" rows="1" cols="70" readonly>SetWeaponFlags1 6 objectID:ref</textarea>
		</p>
		
		<p>However, we must keep in mind that this Sets ALL of the flags. So if you don't preserve the original flags, they will be lost. To account for this we can use some other NVSE functions that were specifically designed to work on bit value integers. These are the <a href="#LogicalAnd">LogicalAnd</a>, <a href="#LogicalNot">LogicalNot</a>, <a href="#LogicalOr">LogicalOr</a>, <a href="#LogicalXor">LogicalXor</a>, <a href="#SetBit">SetBit</a>, and <a href="#ClearBit">ClearBit</a>.</p>
		
		<p>
			<strong>Example:</strong> So now if we want to set the weapon flags of a weapon we would first get the current flags on the weapon by using GetWeaponFlags1, then we use SetBit to set enable the bit we want in the value. As per our previous example, we want to set flags 2 and 4. We look at the chart above and see that that means we want to SET bits 1 and 2, which together is 3. So, in order to check the initial bits, set the new ones, and then set it back, we do the following:
			<textarea class="mono" rows="3" cols="70" readonly>set iFlag to GetWeaponFlags1 objectID:ref&#13;&#10;set iFlag to SetBit iFlag 3&#13;&#10;SetWeaponFlags1 iFlag objectID:ref</textarea>
		</p>
	</div>
	
	<hr class="hor_line" />
	
	<div class="block"><!--Functions In Detail-->
		<p><span class="Section_Head"><a name="Functions_In_Detail" id="Functions_In_Detail"></a>Functions In Detail</span></p>
		
		<div id="funcs_detail">
			<div  id="function_detail_search">
				<input class="search" id="searchBox" placeholder="Filter" /><a class="tooltip" href="#" onclick="return false">Information<span class="critical">You can use this search field to filter the functions by their name or version. Type the name or part of the name of a function to filter.</span></a>
				<!--<input type="button" value="List functions" onclick=""document.forms['search'].search.value = 'list'; return false;"">-->
			</div>
			<ul class="list">
				<li><div><span class="function"><a name="AddSpellNS" id="AddSpellNS"></a><strong>AddSpellNS</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					spell:SpellItem<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> identical to AddSpell but without the UI message.</div></li>
				
				<li><div><span class="function"><a name="BuildRef" id="BuildRef"></a><strong>BuildRef</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					mod Index:Integer<br />
					item ID:Integer<br />
				</div>
				<strong>Return Type:</strong> Reference<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> takes a mod index as an integer set by <a href="#GetModIndex">GetModIndex</a> and the decimal converted formID of an object. Returns a reference to that object (object can be BaseForm or Reference)</div></li>
				
				<li><div><span class="function"><a name="Ceil" id="Ceil"></a><strong>Ceil</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					float:Float<br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the nearest whole number that is greater than a float.</div></li>
				
				<li><div><span class="function"><a name="ClearBit" id="ClearBit"></a><strong>ClearBit</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					valueToChange:Integer<br />
					bitToClear:Integer<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> clears the specified bit.</div></li>

				<li><div><span class="function"><a name="CompareNames" id="CompareNames"></a><strong>CompareNames</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					inv item:GenericObject<br />
					<i>target item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> compares the names of two objects and Returns -1 if the first occurs alphabetically before the second, 1 if the first occurs after the second, or 0 for equality. Comparison is case-insensitive.</div></li>

				<li><div><span class="function"><a name="con_CloseAllMenus" id="con_CloseAllMenus"></a><strong>con_CloseAllMenus</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Closes all open menus.</div></li>

				<li><div><span class="function"><a name="con_GetINISetting" id="con_GetINISetting"></a><strong>con_GetINISetting</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					settingName:String<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Setting string is of the same format as that used by con_SetINISetting. Does not return a value but merely prints the value to the console.</div></li>

				<li><div><span class="function"><a name="con_LoadGame" id="con_LoadGame"></a><strong>con_LoadGame</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					filename:String<br />
					<i>Integer (Optional):Integer</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Loads the savegame with the specified filename if it exists.</div></li>

				<li><div><span class="function"><a name="con_QuitGame" id="con_QuitGame"></a><strong>con_QuitGame</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Exit game without going through menus.</div></li>

				<li><div><span class="function"><a name="con_RefreshINI" id="con_RefreshINI"></a><strong>con_RefreshINI</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Refresh INI settings from files.</div></li>

				<li><div><span class="function"><a name="con_Save" id="con_Save"></a><strong>con_Save</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					saveName:String<br />
					<i>Integer (Optional):Integer</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Saves the current game with the specified filename. If the second parameter is non-zero, generates a text file containing information about the saved data.</div></li>

				<li><div><span class="function"><a name="con_SaveINI" id="con_SaveINI"></a><strong>con_SaveINI</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Writes all the .ini files.</div></li>
				
				<li><div><span class="function"><a name="con_TCL" id="con_TCL"></a><strong>con_TCL</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Toggles clipping.</div></li>
				
				<li><div><span class="function"><a name="con_TFC" id="con_TFC"></a><strong>con_TFC</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Toggles free camera.</div></li>
				
				<li><div><span class="function"><a name="con_ToggleMenus" id="con_ToggleMenus"></a><strong>con_ToggleMenus</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Toggles menus on and off for screenshots.</div></li>
				
				<li><div><span class="function"><a name="CopyIR" id="CopyIR"></a><strong>CopyIR</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#Equipment_Slot_IDs">container:Reference</a><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">3.01</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Copies an inventory reference to the specified container. The calling object needn't be in a container and remains valid after the command is called. If the calling object is equipped, the copy will not be equipped.</div></li>

				<li><div><span class="function"><a name="con_SetCameraFOV" id="con_SetCameraFOV"></a><strong>con_SetCameraFOV</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<i>Float (Optional):Float</i><br />
					<i>Float (Optional):Float</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Change the camera's field of view (in deg): default 75</div></li>

				<li><div><span class="function"><a name="con_SetGameSetting" id="con_SetGameSetting"></a><strong>con_SetGameSetting</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					settingName:String<br />
					newValue:String<br />
				</div>
				<strong>Return Type:</strong> Nothin<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:&nbsp;</strong>Sets a game setting. Does not accept variables as arguments.</div></li>

				<li><div><span class="function"><a name="con_SetINISetting" id="con_SetINISetting"></a><strong>con_SetINISetting</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					setting:String<br />
					newValue:String<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Setting string is of the format "SettingName:CategoryName" where CategoryName is the header under which the setting appears in the .ini file. Does not accept variables as arguments.</div></li>

				<li><div><span class="function"><a name="con_SetVel" id="con_SetVel"></a><strong>con_SetVel</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					Axis:Axis<br />
					float:Float<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Sets Velocity on a reference.</div></li>

				<li><div><span class="function"><a name="DebugPrint" id="DebugPrint"></a><strong>DebugPrint</strong></span><br />
				<strong>Alias:</strong> dbprintc<br />
				<strong>Parameters:</strong> 21<br />
				<div class="parameters">
					<a href="#FormatSpecifiers">format string</a>:String<br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Prints a formatted string to the console if debug mode is enabled for calling script.</div></li>

				<li><div><span class="function"><a name="DisableControl" id="DisableControl"></a><strong>DisableControl</strong></span><br />
				<strong>Alias:</strong> dc<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Disables the key and button bound to a control.</div></li>

				<li><div><span class="function"><a name="DisableKey" id="DisableKey"></a><strong>DisableKey</strong></span><br />
				<strong>Alias:</strong> dk<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Prevents a player from using a key.</div></li>

				<li><div><span class="function"><a name="EnableControl" id="EnableControl"></a><strong>EnableControl</strong></span><br />
				<strong>Alias:</strong> ec<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Enables the key and button assigned to a control.</div></li>

				<li><div><span class="function"><a name="EnableKey" id="EnableKey"></a><strong>EnableKey</strong></span><br />
				<strong>Alias:</strong> ek<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Reenables a key previously disabled with DisableKey.</div></li>

				<li><div><span class="function"><a name="Exp" id="Exp"></a><strong>Exp</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					float:Float<br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Calculates the exponential of a value.</div></li>

				<li><div><span class="function"><a name="Floor" id="Floor"></a><strong>Floor</strong></span><br />
				<strong>Alias:</strong> flr<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					float:Float<br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the nearest whole number that is less than a float.</div></li>

				<li><div><span class="function"><a name="fmod" id="fmod"></a><strong>fmod</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 3<br />
				<div class="parameters">
					x:Float<br />
					n:Float<br />
					<i>offset:Float</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the floating point modulus of dividend in the given base. This differs from dividend % base in the scripting language as % is a strictly integer function. When base is positive, 0 <= result < base. The optional offset shifts the range of the result to offset <= result < base+offset.<br /><br />The two most likely uses of this function are modulus angle 360 to normalize a computed angle, i.e., ensure it is >= 0 and < 360.0 and modulus angle 360 -180 which ensures the computed [change of] angle is >= -180.0 and < 180.0.<br /><br />Modulus n base is defined as n - base Floor n / base. If the base is negative the direction of the inequality changes. Thus: 0 >= result > base and offset >= result > base+offset.</div></li>
				
				<li><div><span class="function"><a name="GetActorBaseFlagsHigh" id="GetActorBaseFlagsHigh"></a><strong>GetActorBaseFlagsHigh</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>actorBase:ref</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Actor_Flags_High">actorFlags:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the high flags for the actor.</div></li>
				
				<li><div><span class="function"><a name="GetActorBaseFlagsLow" id="GetActorBaseFlagsLow"></a><strong>GetActorBaseFlagsLow</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>actorBase:ref</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Actor_Flags_Low">actorFlags:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the low flags for the actor.</div></li>
				
				<li><div><span class="function"><a name="GetAltControl" id="GetAltControl"></a><strong>GetAltControl</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> <a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the mouse button assigned to a control.</div></li>
				
				<li><div><span class="function"><a name="GetAmmoCasing" id="GetAmmoCasing"></a><strong>GetAmmoCasing</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the casing item given by the ammo.</div></li>
				
				<li><div><span class="function"><a name="GetAmmoConsumedPercent" id="GetAmmoConsumedPercent"></a><strong>GetAmmoConsumedPercent</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the percentage chance of getting the casing item from the ammo.</div></li>
				
				<li><div><span class="function"><a name="GetAmmoSpeed" id="GetAmmoSpeed"></a><strong>GetAmmoSpeed</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the speed value of the ammo.</div></li>
				
				<li><div><span class="function"><a name="GetArmorAR" id="GetArmorAR"></a><strong>GetArmorAR</strong></span><br />
				<strong>Alias:</strong> GetArmorArmorRating<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the armor rating of the specified armor.</div></li>

				<li><div><span class="function"><a name="GetArmorDT" id="GetArmorDT"></a><strong>GetArmorDT</strong></span><br />
				<strong>Alias:</strong> GetArmorDamageThreshold<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the armor rating of the specified armor.</div></li>

				<li><div><span class="function"><a name="GetAttackDamage" id="GetAttackDamage"></a><strong>GetAttackDamage</strong></span><br />
				<strong>Alias:</strong> GetDamage<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the attack damage for the weapon.</div></li>

				<li><div><span class="function"><a name="GetBaseObject" id="GetBaseObject"></a><strong>GetBaseObject</strong></span><br />
				<strong>Alias:</strong> gbo<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the base object id of the reference.</div></li>

				<li><div><span class="function"><a name="GetControl" id="GetControl"></a><strong>GetControl</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> <a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the key assigned to a control.</div></li>

				<li><div><span class="function"><a name="GetCrosshairRef" id="GetCrosshairRef"></a><strong>GetCrosshairRef</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Reference<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the reference under the crosshair - i.e., the reference that would be activated if the player pressed the Activate button. Will return non-activatable items (like tables and trees) as long as they are within activation distance. Otherwise Returns zero.</div></li>
				
				<li><div><span class="function"><a name="GetCurrentHealth" id="GetCurrentHealth"></a><strong>GetCurrentHealth</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the current health of the calling reference.</div></li>

				<li><div><span class="function"><a name="GetDebugMode" id="GetDebugMode"></a><strong>GetDebugMode</strong></span><br />
				<strong>Alias:</strong> GetDbMode<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>modIndex:Integer</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns whether debug mode is set for the mod. If the mod index parameter is omitted, uses the mod index of the calling script.</div></li>
				
				<li><div><span class="function"><a name="GetDebugSelection" id="GetDebugSelection"></a><strong>GetDebugSelection</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Reference<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">R</a><br />
				<strong>Description:</strong> Returns the reference to the item last selected in the console.</div></li>

				<li><div><span class="function"><a name="GetEquippedCurrentHealth" id="GetEquippedCurrentHealth"></a><strong>GetEquippedCurrentHealth</strong></span><br />
				<strong>Alias:</strong> GetEqCurHealth<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#Equipment_Slot_IDs">equipmentSlot:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the current health of the object equipped in the specified slot.</div></li>

				<li><div><span class="function"><a name="GetEquippedObject" id="GetEquippedObject"></a><strong>GetEquippedObject</strong></span><br />
				<strong>Alias:</strong> GetEqObj<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#Equipment_Slot_IDs">atIndex:Integer</a><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the base object of the item in the specified slot.</div></li>
				
				<li><div><span class="function"><a name="GetEquippedWeaponModFlags" id="GetEquippedWeaponModFlags"></a><strong>GetEquippedWeaponModFlags</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">R</a><br />
				<strong>Description:</strong> Returns a bit value of the equipped weapon mods for the currently equipped weapon.</div></li>

				<li><div><span class="function"><a name="GetEquipType" id="GetEquipType"></a><strong>GetEquipType</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the equipment type of the inventory object.</div></li>

				<li><div><span class="function"><a name="GetFirstRef" id="GetFirstRef"></a><strong>GetFirstRef</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 3<br />
				<div class="parameters">
					<a href="#Form_Type_IDs"><i>form type:Integer</i></a><br />
				<i>cell depth:Integer</i><br />
				<i>include taken refs:Bool</i><br />
				</div>
				<strong>Return Type:</strong> ObjectRef<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Returns the first reference in the current cell. A type can optionally be supplied to return only references matching that type. Additionally, you can pass 200 for actors and 201 for inventory items. This function should be used only within a Label...Goto loop and GetNextRef. An optional cell depth can be supplied to specify the number of adjacent cells to scan in exteriors: a cell depth of 1 scans the player's current cell plus 8 adjacent cells, a depth of 2 scans the player's cell plus 25 adjacent cells. By default, inactive references to items which were previously picked up by an actor are ignored; passing 1 for the third parameter will force those references to be included.</div></li>

				<li><div><span class="function"><a name="GetFirstRefInCell" id="GetFirstRefInCell"></a><strong>GetFirstRefInCell</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 4<br />
				<div class="parameters">
					cell:Cell<br />
				<a href="#Form_Type_IDs"><i>form type:Integer</i></a><br />
				<i>cell depth:Integer</i><br />
				<i>include taken refs:Bool</i><br />
				</div>
				<strong>Return Type:</strong> ObjectRef<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Works the same as GetFirstRef but takes an additional parameter specifying the cell to scan. Note that if the specified is not loaded in memory, this function will only return persistent references. Use GetNextRef to iterate through the rest of the references in the cell.</div></li>

				<li><div><span class="function"><a name="GetGameLoaded" id="GetGameLoaded"></a><strong>GetGameLoaded</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Returns 1 after a game is loaded on a per-script basis. For each script that calls GetGameLoaded, the command will return true exactly once each time the game is loaded and false thereafter.</div></li>

				<li><div><span class="function"><a name="GetGameRestarted" id="GetGameRestarted"></a><strong>GetGameRestarted</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Returns 1 when the game is restarted on a per-script basis. For each script that calls GetGameRestarted, the commands Returns true exactly once per game session. Useful for situations in which a script must set certain object properties or settings each time the game is started.</div></li>

				<li><div><span class="function"><a name="GetHealth" id="GetHealth"></a><strong>GetHealth</strong></span><br />
				<strong>Alias:</strong> GetBaseHealth<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the base health of the object or calling reference.</div></li>

				<li><div><span class="function"><a name="GetHotkeyItem" id="GetHotkeyItem"></a><strong>GetHotkeyItem</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					hotkey:Integer<br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Returns the item assigned to the specified hotkey from 1 to 8</div></li>
				
				<li><div><span class="function"><a name="GetInventoryObject" id="GetInventoryObject"></a><strong>GetInventoryObject</strong></span><br />
				<strong>Alias:</strong> GetNthObject<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					index:Integer<br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the objectID of the Nth item type in the container.</div></li>

				<li><div><span class="function"><a name="GetKeyPress" id="GetKeyPress"></a><strong>GetKeyPress</strong></span><br />
				<strong>Alias:</strong> gkp<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					index:Integer<br />
				</div>
				<strong>Return Type:</strong> <a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the scancode of the nth key which is currently being held down.</div></li>

				<li><div><span class="function"><a name="GetLinkedDoor" id="GetLinkedDoor"></a><strong>GetLinkedDoor</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the door to which the calling reference is linked.</div></li>

				<li><div><span class="function"><a name="GetModIndex" id="GetModIndex"></a><strong>GetModIndex</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					modName:String<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the index of the specified mod.</div></li>

				<li><div><span class="function"><a name="GetMouseButtonPress" id="GetMouseButtonPress"></a><strong>GetMouseButtonPress</strong></span><br />
				<strong>Alias:</strong> gmbp<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					index:Integer<br />
				</div>
				<strong>Return Type:</strong> FixMe<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the code of the nth mouse button which is currently being held down.</div></li>

				<li><div><span class="function"><a name="GetNextRef" id="GetNextRef"></a><strong>GetNextRef</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> ObjectRef<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Returns the next reference of a given type in the current cell. GetFirstRef or GetFirstRefInCell must be called first; the formType, cellDepth, and boolean arguments passed to GetFirstRef/GetFirstRefInCell are used. This command should only be used within a loop that executes within a single frame.</div></li>

				<li><div><span class="function"><a name="GetNumericGameSetting" id="GetNumericGameSetting"></a><strong>GetNumericGameSetting</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					settingName:String<br />
				</div>
				<strong>Return Type:</strong> IntegerOrFloat<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the value of a numeric game setting.</div></li>

				<li><div><span class="function"><a name="GetNumericIniSetting" id="GetNumericIniSetting"></a><strong>GetNumericIniSetting</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					settingName:String<br />
				</div>
				<strong>Return Type:</strong> IntegerOrFloat<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the value of a numeric setting. Setting name is of the format "SettingName:CategoryName" where CategoryName is the header under which the setting appears in the .ini file.</div></li>
				
				<li><div><span class="function"><a name="GetNumItems" id="GetNumItems"></a><strong>GetNumItems</strong></span><br />
				<strong>Alias:</strong> GetNumObjects<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the number of different object types in the container.</div></li>

				<li><div><span class="function"><a name="GetNumKeysPressed" id="GetNumKeysPressed"></a><strong>GetNumKeysPressed</strong></span><br />
				<strong>Alias:</strong> gnkp<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns how many keyboard keys are currently being held down.</div></li>

				<li><div><span class="function"><a name="GetNumLoadedMods" id="GetNumLoadedMods"></a><strong>GetNumLoadedMods</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the number of loaded mods.</div></li>

				<li><div><span class="function"><a name="GetNumMouseButtonsPressed" id="GetNumMouseButtonsPressed"></a><strong>GetNumMouseButtonsPressed</strong></span><br />
				<strong>Alias:</strong> gnmbp<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns how many mouse buttons are currently being held down.</div></li>

				<li><div><span class="function"><a name="GetNumRefs" id="GetNumRefs"></a><strong>GetNumRefs</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 3<br />
				<div class="parameters">
					<i><a href="#Form_Type_IDs"><i>form type:Integer</i></a></i><br />
				<i>cell depth:Integer</i><br />
				<i>include taken refs:Bool</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Returns the number of references in the current cell which match the optionally supplied type code. Use 200 for actors and 201 for inventory items. An optional cell depth can be specified for exteriors. By default, inactive references to items which were previously picked up by an actor are ignored; passing 1 for the third parameter will force those references to be included.</div></li>

				<li><div><span class="function"><a name="GetNumRefsInCell" id="GetNumRefsInCell"></a><strong>GetNumRefsInCell</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 4<br />
				<div class="parameters">
					cell:Cell<br />
				<i><a href="#Form_Type_IDs"><i>form type:Integer</i></a></i><br />
				<i>cell depth:Integer</i><br />
				<i>include taken refs:Bool</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Works the same as GetNumRefs but takes an additional parameter specifying the cell to scan. Only counts persistent references if the cell is not loaded in memory.</div></li>

				<li><div><span class="function"><a name="GetNVSEBeta" id="GetNVSEBeta"></a><strong>GetNVSEBeta</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> Yes<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the beta number of the installed version of NVSE. A non-beta version of NVSE will return 0.</div></li>

				<li><div><span class="function"><a name="GetNVSERevision" id="GetNVSERevision"></a><strong>GetNVSERevision</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> Yes<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the numbered revision of the installed version of NVSE.</div></li>

				<li><div><span class="function"><a name="GetNVSEVersion" id="GetNVSEVersion"></a><strong>GetNVSEVersion</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> Yes<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the installed version of NVSE.</div></li>

				<li><div><span class="function"><a name="GetObjectEffect" id="GetObjectEffect"></a><strong>GetObjectEffect</strong></span><br />
				<strong>Alias:</strong> GetEnchantment<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the object effect of the inventory object.</div></li>

				<li><div><span class="function"><a name="GetOpenKey" id="GetOpenKey"></a><strong>GetOpenKey</strong></span><br />
				<strong>Alias:</strong> GetKey<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the key associated with a lockable object.</div></li>
				
				<li><div><span class="function"><a name="GetOwner" id="GetOwner"></a><strong>GetOwner</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Reference<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.9</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">R</a><br />
				<strong>Description:</strong> Returns the NPC or faction which owns the calling reference.</div></li>
				
				<li><div><span class="function"><a name="GetOwningFactionRequiredRank" id="GetOwningFactionRequiredRank"></a><strong>GetOwningFactionRequiredRank</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">R</a><br />
				<strong>Description:</strong> Returns the rank in the owning faction required to legally activate the calling reference.</div></li>

				<li><div><span class="function"><a name="GetParentCell" id="GetParentCell"></a><strong>GetParentCell</strong></span><br />
				<strong>Alias:</strong> gpc<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the objectID of the parent cell of the calling reference.</div></li>
				
				<li><div><span class="function"><a name="GetParentCellOwner" id="GetParentCellOwner"></a><strong>GetParentCellOwner</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Reference<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">R</a><br />
				<strong>Description:</strong> Returns the NPC or faction which owns the calling reference's parent cell.</div></li>
				
				<li><div><span class="function"><a name="GetParentCellOwningFactionRequiredRank" id="GetParentCellOwningFactionRequiredRank"></a><strong>GetParentCellOwningFactionRequiredRank</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Reference<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">R</a><br />
				<strong>Description:</strong> Returns the rank required for ownership of the calling reference's parent cell.</div></li>

				<li><div><span class="function"><a name="GetParentWorldspace" id="GetParentWorldspace"></a><strong>GetParentWorldspace</strong></span><br />
				<strong>Alias:</strong> gpw<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the parent worldspace of the reference.</div></li>
				
				<li><div><span class="function"><a name="GetPlayerCurrentAmmo" id="GetPlayerCurrentAmmo"></a><strong>GetPlayerCurrentAmmo</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.5</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Returns the currently equipped ammo type of the player.</div></li>
				
				<li><div><span class="function"><a name="GetPlayerCurrentAmmoRounds" id="GetPlayerCurrentAmmoRounds"></a><strong>GetPlayerCurrentAmmoRounds</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.5</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the number of rounds in the player's equipped weapon.</div></li>

				<li><div><span class="function"><a name="GetRefCount" id="GetRefCount"></a><strong>GetRefCount</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the number of items in a stack of items in the world.</div></li>
				
				<li><div><span class="function"><a name="GetRepairList" id="GetRepairList"></a><strong>GetRepairList</strong></span><br />
				<strong>Alias:</strong> grl<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> FormList<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the repair list for the inventory object.</div></li>

				<li><div><span class="function"><a name="GetScript" id="GetScript"></a><strong>GetScript</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.3</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the script of the reference or passed object.</div></li>

				<li><div><span class="function"><a name="GetSourceModIndex" id="GetSourceModIndex"></a><strong>GetSourceModIndex</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the mod index of the plugin from which the specified object originates.</div></li>

				<li><div><span class="function"><a name="GetTeleportCell" id="GetTeleportCell"></a><strong>GetTeleportCell</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns the cell to which the calling load door teleports.</div></li>

				<li><div><span class="function"><a name="GetType" id="GetType"></a><strong>GetType</strong></span><br />
				<strong>Alias:</strong> GetObjectType<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong><a href="#Form_Type_IDs">formType:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the type of the specified base form.</div></li>

				<li><div><span class="function"><a name="GetUIFloat" id="GetUIFloat"></a><strong>GetUIFloat</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					traitName:String<br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Looks up a UI trait by name and Returns its numeric value. The trait name is of the format "MenuName/ElementName/ElementName/.../TraitName" as defined in the XML hierarchy for the desired menu, i.e."MessageMenu\NoGlow_Branch\MM_Title\x"</div></li>

				<li><div><span class="function"><a name="GetValue" id="GetValue"></a><strong>GetValue</strong></span><br />
				<strong>Alias:</strong> GetItemValue<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the base value of the object or calling reference.</div></li>

				<li><div><span class="function"><a name="GetWeaponActionPoints" id="GetWeaponActionPoints"></a><strong>GetWeaponActionPoints</strong></span><br />
				<strong>Alias:</strong> GetAP<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the number of action points per shot of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAimArc" id="GetWeaponAimArc"></a><strong>GetWeaponAimArc</strong></span><br />
				<strong>Alias:</strong> GetAimArc<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the aim arc of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAmmo" id="GetWeaponAmmo"></a><strong>GetWeaponAmmo</strong></span><br />
				<strong>Alias:</strong> GetAmmo<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the ammo of a weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAmmoUse" id="GetWeaponAmmoUse"></a><strong>GetWeaponAmmoUse</strong></span><br />
				<strong>Alias:</strong> GetAmmoUse<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the ammo used per shot of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAnimAttackMult" id="GetWeaponAnimAttackMult"></a><strong>GetWeaponAnimAttackMult</strong></span><br />
				<strong>Alias:</strong> GetAnimAttackMult<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the animation attack multiplier of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAnimJamTime" id="GetWeaponAnimJamTime"></a><strong>GetWeaponAnimJamTime</strong></span><br />
				<strong>Alias:</strong> GetAnimJamTime<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the animation jam time of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAnimMult" id="GetWeaponAnimMult"></a><strong>GetWeaponAnimMult</strong></span><br />
				<strong>Alias:</strong> GetAnimMult<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the animation multiplier for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAnimReloadTime" id="GetWeaponAnimReloadTime"></a><strong>GetWeaponAnimReloadTime</strong></span><br />
				<strong>Alias:</strong> GetAnimReloadTime<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> retuns the animation reload time for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAnimShotsPerSec" id="GetWeaponAnimShotsPerSec"></a><strong>GetWeaponAnimShotsPerSec</strong></span><br />
				<strong>Alias:</strong> GetAnimShotsPerSec<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the animation shots per second of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponAttackAnimation" id="GetWeaponAttackAnimation"></a><strong>GetWeaponAttackAnimation</strong></span><br />
				<strong>Alias:</strong> GetAttackAnim<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Attack_Animations">attackAnimation:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the attack animation of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponBaseVATSChance" id="GetWeaponBaseVATSChance"></a><strong>GetWeaponBaseVATSChance</strong></span><br />
				<strong>Alias:</strong> GetVATSChance<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the base VATS chance of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponClipRounds" id="GetWeaponClipRounds"></a><strong>GetWeaponClipRounds</strong></span><br />
				<strong>Alias:</strong> GetClipSize<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the clip size for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponCritChance" id="GetWeaponCritChance"></a><strong>GetWeaponCritChance</strong></span><br />
				<strong>Alias:</strong> GetCritPerc<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the chance of a critical shot for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponCritDamage" id="GetWeaponCritDamage"></a><strong>GetWeaponCritDamage</strong></span><br />
				<strong>Alias:</strong> GetCritDam<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the critical damage of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponCritEffect" id="GetWeaponCritEffect"></a><strong>GetWeaponCritEffect</strong></span><br />
				<strong>Alias:</strong> GetCritEffect<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the spell for the critical effect for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponFireDelayMax" id="GetWeaponFireDelayMax"></a><strong>GetWeaponFireDelayMax</strong></span><br />
				<strong>Alias:</strong> GetFireDelayMax<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the semi-auto max fire delay for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponFireDelayMin" id="GetWeaponFireDelayMin"></a><strong>GetWeaponFireDelayMin</strong></span><br />
				<strong>Alias:</strong> GetFireDelayMin<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the semi-auto min fire delay for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponFireRate" id="GetWeaponFireRate"></a><strong>GetWeaponFireRate</strong></span><br />
				<strong>Alias:</strong> GetFireRate<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the fire rate of the weapon.</div></li>
				
				<li><div><span class="function"><a name="GetWeaponFlags1" id="GetWeaponFlags1"></a><strong>GetWeaponFlags1</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Weapon_Flags_1">weaponFlags:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns a the weapon flags in bit value.</div></li>
				
				<li><div><span class="function"><a name="GetWeaponFlags2" id="GetWeaponFlags2"></a><strong>GetWeaponFlags2</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Weapon_Flags_2">weaponFlags:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns a the weapon flags in bit value.</div></li>

				<li><div><span class="function"><a name="GetWeaponHandGrip" id="GetWeaponHandGrip"></a><strong>GetWeaponHandGrip</strong></span><br />
				<strong>Alias:</strong> GetHandGrip<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Weapon_Hand_Grips">handGrip:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the hand grip of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponHasScope" id="GetWeaponHasScope"></a><strong>GetWeaponHasScope</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> Yes<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns whether the weapon has a scope or not.</div></li>

				<li><div><span class="function"><a name="GetWeaponIsAutomatic" id="GetWeaponIsAutomatic"></a><strong>GetWeaponIsAutomatic</strong></span><br />
				<strong>Alias:</strong> GetIsAutomatic<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns 1 if the weapon is an automatic weapon.</div></li>
				
				<li><div><span class="function"><a name="GetWeaponItemMod" id="GetWeaponItemMod"></a><strong>GetWeaponItemMod</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Mod_Index">modIndex:Integer</a>
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the weapon mod form at the specified index.</div></li>

				<li><div><span class="function"><a name="GetWeaponLimbDamageMult" id="GetWeaponLimbDamageMult"></a><strong>GetWeaponLimbDamageMult</strong><strong><br />
				Alias:</strong> GetLimbDamageMult<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the limb damage multiplier of the weapon.</div></li>
				
				<li><div><span class="function"><a name="GetWeaponLongBursts" id="GetWeaponLongBursts"></a><strong>GetWeaponLongBursts</strong><strong><br />
				Alias:</strong> GetLongBursts<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
				<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.5</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the long burst value of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponMaxRange" id="GetWeaponMaxRange"></a><strong>GetWeaponMaxRange</strong></span><br />
				<strong>Alias:</strong> GetMaxRange<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the max range of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponMinRange" id="GetWeaponMinRange"></a><strong>GetWeaponMinRange</strong></span><br />
				<strong>Alias:</strong> GetMinRange<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the min range of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponMinSpread" id="GetWeaponMinSpread"></a><strong>GetWeaponMinSpread</strong></span><br />
				<strong>Alias:</strong> GetMinSpread<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the minimum spread of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponNumProjectiles" id="GetWeaponNumProjectiles"></a><strong>GetWeaponNumProjectiles</strong></span><br />
				<strong>Alias:</strong> GetNumProj<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the number of projectiles used in a single shot by the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponProjectile" id="GetWeaponProjectile"></a><strong>GetWeaponProjectile</strong></span><br />
				<strong>Alias:</strong> GetWeapProj<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the weapon projectile info.</div></li>

				<li><div><span class="function"><a name="GetWeaponReach" id="GetWeaponReach"></a><strong>GetWeaponReach</strong></span><br />
				<strong>Alias:</strong> GetReach<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the reach of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponReloadAnim" id="GetWeaponReloadAnim"></a><strong>GetWeaponReloadAnim</strong></span><br />
				<strong>Alias:</strong> GetReloadAnim<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Reload_Animations">reloadAnim:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the reload animation of the weapon.</div></li>
				
				<li><div><span class="function"><a name="GetWeaponRequiredSkill" id="GetWeaponRequiredSkill"></a><strong>GetWeaponRequiredSkill</strong></span><br />
				<strong>Alias:</strong> GetReqSkill<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Reload_Animations">reloadAnim:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the reload animation of the weapon.</div></li>
				
				<li><div><span class="function"><a name="GetWeaponRequiredStrength" id="GetWeaponRequiredStrength"></a><strong>GetWeaponRequiredStrength</strong></span><br />
				<strong>Alias:</strong> GetReqStr<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> <a href="#Reload_Animations">reloadAnim:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the reload animation of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponResistType" id="GetWeaponResistType"></a><strong>GetWeaponResistType</strong></span><br />
				<strong>Alias:</strong> GetWeaponResist<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong><a href="#Actor_Value_Codes">ResistValue:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the resist type for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponRumbleDuration" id="GetWeaponRumbleDuration"></a><strong>GetWeaponRumbleDuration</strong></span><br />
				<strong>Alias:</strong> GetRumbleDuration<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the rumble duration of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponRumbleLeftMotor" id="GetWeaponRumbleLeftMotor"></a><strong>GetWeaponRumbleLeftMotor</strong></span><br />
				<strong>Alias:</strong> GetRumbleLeft<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the rumble left motor of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponRumbleRightMotor" id="GetWeaponRumbleRightMotor"></a><strong>GetWeaponRumbleRightMotor</strong></span><br />
				<strong>Alias:</strong> GetRumbleRight<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the rumble right motor of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponRumbleWavelength" id="GetWeaponRumbleWavelength"></a><strong>GetWeaponRumbleWavelength</strong></span><br />
				<strong>Alias:</strong> GetRumbleWavelen<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the rumble wavelegnth for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponSightFOV" id="GetWeaponSightFOV"></a><strong>GetWeaponSightFOV</strong></span><br />
				<strong>Alias:</strong> GetSightFOV<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the zoom field of view for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponSightUsage" id="GetWeaponSightUsage"></a><strong>GetWeaponSightUsage</strong></span><br />
				<strong>Alias:</strong> GetSightUsage<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the sight usage of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponSkill" id="GetWeaponSkill"></a><strong>GetWeaponSkill</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong><a href="#Actor_Value_Codes">WeaponSkill:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the skill for the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponSpread" id="GetWeaponSpread"></a><strong>GetWeaponSpread</strong></span><br />
				<strong>Alias:</strong> GetSpread<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the spread of the weapon.</div></li>

				<li><div><span class="function"><a name="GetWeaponType" id="GetWeaponType"></a><strong>GetWeaponType</strong></span><br />
				<strong>Alias:</strong> GetWeapType<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong><a href="#Weapon_Type">WeaponType:Integer</a><br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the weapon type.</div></li>

				<li><div><span class="function"><a name="GetWeight" id="GetWeight"></a><strong>GetWeight</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> Yes<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns the weight of the sepcified base form.</div></li>

				<li><div><span class="function"><a name="Goto" id="Goto"></a><strong>Goto</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>labelID:Integer</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Jump to a labeled position in the script previously defined by a call to Label. Execution will return to the label, simulating a loop. Be careful to provide an exit condition to avoid creating infinite loops.</div></li>

				<li><div><span class="function"><a name="HoldKey" id="HoldKey"></a><strong>HoldKey</strong></span><br />
				<strong>Alias:</strong> hk<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Holds down the key with the specified dx scancode.</div></li>

				<li><div><span class="function"><a name="IsClonedForm" id="IsClonedForm"></a><strong>IsClonedForm</strong></span><br />
				<strong>Alias:</strong> IsCloned<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns whether the specified form is a dynamic object or not. Dynamic objects include those created with TempCloneForm and those generated by the game during play. These objects always have a mod index of 0xFF.</div></li>

				<li><div><span class="function"><a name="IsControl" id="IsControl"></a><strong>IsControl</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns 1 if the specified key or mouse button is assigned to a game control, 2 if it has been registered as a custom control by a mod via SetIsControl, or 0 otherwise.</div></li>

				<li><div><span class="function"><a name="IsControlDisabled" id="IsControlDisabled"></a><strong>IsControlDisabled</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns 1 if thecontrol has been disabled by a call to DisableControl. Note that this only keeps track of calls to DisableControl and EnableControl; it does not check if the disabled state of the key or mouse button has been affected by DisableKey.</div></li>

				<li><div><span class="function"><a name="IsControlPressed" id="IsControlPressed"></a><strong>IsControlPressed</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> Yes<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns 1 if either the key or mouse button assigned to the specified control code is currently pressed. Detects disabled keys.</div></li>

				<li><div><span class="function"><a name="IsFormValid" id="IsFormValid"></a><strong>IsFormValid</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>refVar:variable</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.3</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns 1 if the object passed in the ref variable is valid. Returns 0 if the object stored in the variable is not currently loaded in memory (for instance, a non-persistent reference) or if the variable doesn't hold any object.</div></li>

				<li><div><span class="function"><a name="IsKeyDisabled" id="IsKeyDisabled"></a><strong>IsKeyDisabled</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns 1 if the key has been disabled using DisableKey.</div></li>

				<li><div><span class="function"><a name="IsKeyPressed" id="IsKeyPressed"></a><strong>IsKeyPressed</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
					<i>filter:Integer</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> Yes<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Return if a dx scancode is down or up. The optional integer is a bitfield, so the following values can be added together:<br />
				&nbsp;&nbsp;&nbsp;1 = Return game state (buttons as seen by the game after all filtering, previous default behavior)<br />
				&nbsp;&nbsp;&nbsp;2 = Return raw state (unfiltered buttons, exactly what is being pressed)<br />
				&nbsp;&nbsp;&nbsp;4 = Return inserted state (scripted keypresses only) if multiple of the above are selected, then they are logically or'd together<br />
				&nbsp;&nbsp;&nbsp;8 = Ignore disabled keys (Returns 0 for all DisableKey'd keys)</div></li>

				<li><div><span class="function"><a name="IsModLoaded" id="IsModLoaded"></a><strong>IsModLoaded</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					modName:String<br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the whether the specified mod is loaded.</div></li>
				
				<li><div><span class="function"><a name="IsPersistent" id="IsPersistent"></a><strong>IsPersistent</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Returns 1 if the calling reference is a persistent reference.</div></li>

				<li><div><span class="function"><a name="IsPowerArmor" id="IsPowerArmor"></a><strong>IsPowerArmor</strong></span><br />
				<strong>Alias:</strong> IsPA<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns whether the biped form is considered power armor.</div></li>
				
				<li><div><span class="function"><a name="IsQuestItem" id="IsQuestItem"></a><strong>IsQuestItem</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns whether the type is a quest item.</div></li>

				<li><div><span class="function"><a name="IsReference" id="IsReference"></a><strong>IsReference</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					reference:ObjectRef<br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.3</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns 1 if the specified ref variable contains a reference, as opposed to a base object.</div></li>
				
				<li><div><span class="function"><a name="IsRefInList" id="IsRefInList"></a><strong>IsRefInList</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form list:FormList<br />
					form:GenericObject<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">3.02</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Checks whether a ref, its baseform, or its leveled baseForm is in a FormList and Returns the index.</div></li>

				<li><div><span class="function"><a name="IsScripted" id="IsScripted"></a><strong>IsScripted</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.3</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Returns 1 if the object or reference has a script attached to it.</div></li>

				<li><div><span class="function"><a name="Label" id="Label"></a><strong>Label</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>labelID:Integer</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Defines a labeled position in a script which subsequent calls to Goto can use to create loops. The label must be defined before Goto is called.</div></li>

				<li><div><span class="function"><a name="LeftShift" id="LeftShift"></a><strong>LeftShift</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					int:Integer<br />
					int:Integer<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Shifts a 32-bit integer left the specified number of bits.</div></li>

				<li><div><span class="function"><a name="ListAddForm" id="ListAddForm"></a><strong>ListAddForm</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 3<br />
				<div class="parameters">
					form list:FormList<br />
					form:GenericObject<br />
					<i>index:Integer</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Adds the form to the list at the given index (or at the end if not provided)</div></li>

				<li><div><span class="function"><a name="ListAddReference" id="ListAddReference"></a><strong>ListAddReference</strong></span><br />
				<strong>Alias:</strong> ListAddRef<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form list:FormList<br />
					<i>index:Integer</i><br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">R</a><br />
				<strong>Description:</strong> Adds the calling reference at the given index (or at the end if not provided)</div></li>

				<li><div><span class="function"><a name="ListGetCount" id="ListGetCount"></a><strong>ListGetCount</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					form list:FormList<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the count of items in the form list.</div></li>

				<li><div><span class="function"><a name="ListGetFormIndex" id="ListGetFormIndex"></a><strong>ListGetFormIndex</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form list:FormList<br />
					form:GenericObject<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the index for the specified form.</div></li>

				<li><div><span class="function"><a name="ListGetNthForm" id="ListGetNthForm"></a><strong>ListGetNthForm</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form list:FormList<br />
					index:Integer<br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns the nth form in the form list.</div></li>

				<li><div><span class="function"><a name="ListRemoveForm" id="ListRemoveForm"></a><strong>ListRemoveForm</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form list:FormList<br />
					form:GenericObject<br />
				</div>
				<strong>Return Type:</strong> indexOfFormRemoved:Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Removes the specified from from the list.</div></li>

				<li><div><span class="function"><a name="ListRemoveNthForm" id="ListRemoveNthForm"></a><strong>ListRemoveNthForm</strong></span><br />
				<strong>Alias:</strong> ListRemoveNth<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form list:FormList<br />
					<i>index:Integer</i><br />
				</div>
				<strong>Return Type:</strong> formRemoved:BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Removes the nth form from the list.</div></li>

				<li><div><span class="function"><a name="ListReplaceForm" id="ListReplaceForm"></a><strong>ListReplaceForm</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 3<br />
				<div class="parameters">
					form list:FormList<br />
					replaceWith:GenericObject<br />
					formToReplace:GenericObject<br />
				</div>
				<strong>Return Type:</strong> index:Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Replaces the specified from with another.</div></li>

				<li><div><span class="function"><a name="ListReplaceNthForm" id="ListReplaceNthForm"></a><strong>ListReplaceNthForm</strong></span><br />
				<strong>Alias:</strong> ListReplaceNth<br />
				<strong>Parameters:</strong> 3<br />
				<div class="parameters">
					form list:FormList<br />
					replaceWith:GenericObject<br />
					<i>formIndex:Integer</i><br />
				</div>
				<strong>Return Type:</strong> replaced:BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Replaces the nth form of the list with the specified form. Trait name is of the format used by GetUIFloat.</div></li>

				<li><div><span class="function"><a name="Log10" id="Log10"></a><strong>Log10</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					float:Float<br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Calculates the base 10 log of a value.</div></li>

				<li><div><span class="function"><a name="LogicalAnd" id="LogicalAnd"></a><strong>LogicalAnd</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					int:Integer<br />
					int:Integer<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Performs a logical AND between two 32-bit integers.</div></li>

				<li><div><span class="function"><a name="LogicalNot" id="LogicalNot"></a><strong>LogicalNot</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					int:Integer<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Performs a logical NOT on a 32-bit integer.</div></li>

				<li><div><span class="function"><a name="LogicalOr" id="LogicalOr"></a><strong>LogicalOr</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					int:Integer<br />
					int:Integer<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Performs a logical OR between two 32-bit integers.</div></li>

				<li><div><span class="function"><a name="LogicalXor" id="LogicalXor"></a><strong>LogicalXor</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					int:Integer<br />
					int:Integer<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Performs a logical XOR between two 32-bit integers.</div></li>

				<li><div><span class="function"><a name="MenuHoldKey" id="MenuHoldKey"></a><strong>MenuHoldKey</strong></span><br />
				<strong>Alias:</strong> mhk<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Fakes a key press indefinately in menu mode.</div></li>

				<li><div><span class="function"><a name="MenuReleaseKey" id="MenuReleaseKey"></a><strong>MenuReleaseKey</strong></span><br />
				<strong>Alias:</strong> mrk<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Releases a key held down by MenuHoldKey.</div></li>

				<li><div><span class="function"><a name="MenuTapKey" id="MenuTapKey"></a><strong>MenuTapKey</strong></span><br />
				<strong>Alias:</strong> mtk<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Fakes a key press for one frame in menu mode.</div></li>
				
				<li><div><span class="function"><a name="MessageBoxEx" id="MessageBoxEx"></a><strong>MessageBoxEx</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 21<br />
				<div class="parameters">
					<a href="#FormatSpecifiers">format string</a>:String<br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Displays a formatted MessageBox using the extended format specifiers. Format specifiers may appear within buttons. Button text should be included within the format string, separated by the pipe character |. For more information, see <a href="http://cs.elderscrolls.com/index.php?title=MessageBoxEx">here</a></div></li>
				
				<li><div><span class="function"><a name="MessageEx" id="MessageEx"></a><strong>MessageEx</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 21<br />
				<div class="parameters">
					<a href="#FormatSpecifiers">format string</a>:String<br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Prints a formatted message to the top-left corner of the screen. For more information, see <a href="http://cs.elderscrolls.com/index.php?title=MessageEx">here</a>.</div></li>
				
				<li><div><span class="function"><a name="PrintActiveTile" id="PrintActiveTile"></a><strong>PrintActiveTile</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 0<br />
				<div class="parameters"></div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> A debugging command which outputs all of the children of the UI component currently under the mouse cursor as well as the names and values of all of its traits. Output is sent to the console and to obse.log. Avoid using this function in released mods; it is intended for testing and debugging only.</div></li>

				<li><div><span class="function"><a name="PrintToConsole" id="PrintToConsole"></a><strong>PrintToConsole</strong></span><br />
				<strong>Alias:</strong> printc<br />
				<strong>Parameters:</strong> 21<br />
				<div class="parameters">
					<a href="#FormatSpecifiers">format string</a>:String<br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Prints a formatted message to the console using the extended format specifiers.</div></li>
				
				<li><div><span class="function"><a name="Rand" id="Rand"></a><strong>Rand</strong></span><br />
				<strong>Alias:</strong> r<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					min:Float<br />
					max:Float<br />
				</div>
				<strong>Return Type:</strong> Float<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Returns a random number between min and max.</div></li>

				<li><div><span class="function"><a name="ReleaseKey" id="ReleaseKey"></a><strong>ReleaseKey</strong></span><br />
				<strong>Alias:</strong> rk<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> FixMe<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Releases a key held down by HoldKey.</div></li>

				<li><div><span class="function"><a name="RemoveScript" id="RemoveScript"></a><strong>RemoveScript</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> oldScript:BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.3</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Removes and Returns the script attached to the object. The object is no longer scripted.</div></li>

				<li><div><span class="function"><a name="RightShift" id="RightShift"></a><strong>RightShift</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					int:Integer<br />
					int:Integer<br />
				</div>
				<strong>Return Type:</strong> Integer<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Shifts a 32-bit integer right the specified number of bits.</div></li>
				
				<li><div><span class="function"><a name="SetActorBaseFlagsHigh" id="SetActorBaseFlagsHigh"></a><strong>SetActorBaseFlagsHigh</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Actor_Flags_High">actorFlags:Integer</a><br />
					<i>actorBase:ref</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the flags of the actor. Use of unknown bits may cause random behavior.</div></li>
				
				<li><div><span class="function"><a name="SetActorBaseFlagsLow" id="SetActorBaseFlagsLow"></a><strong>SetActorBaseFlagsLow</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Actor_Flags_High">actorFlags:Integer</a><br />
					<i>actorBase:ref</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the flags of the actor. Use of unknown bits may cause random behavior.</div></li>

				<li><div><span class="function"><a name="SetAltControl" id="SetAltControl"></a><strong>SetAltControl</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Assigns a new mouse button code to the specified mouse control. Changes are saved to the ini when the user exits the game.</div></li>

				<li><div><span class="function"><a name="SetArmorAR" id="SetArmorAR"></a><strong>SetArmorAR</strong></span><br />
				<strong>Alias:</strong> SetArmorArmorRating<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					newArmorRating:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the armor rating of the object.</div></li>

				<li><div><span class="function"><a name="SetArmorDT" id="SetArmorDT"></a><strong>SetArmorDT</strong></span><br />
				<strong>Alias:</strong> SetArmorDamageThreshold<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					newArmorRating:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the damage threshold of the object.</div></li>

				<li><div><span class="function"><a name="SetAttackDamage" id="SetAttackDamage"></a><strong>SetAttackDamage</strong></span><br />
				<strong>Alias:</strong> SetDamage<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					damage:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the attack damage of the form.</div></li>

				<li><div><span class="function"><a name="SetBaseItemValue" id="SetBaseItemValue"></a><strong>SetBaseItemValue</strong></span><br />
				<strong>Alias:</strong> SetValue<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form:InventoryObject<br />
					newValue:Integer<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Changes the value of the base form passed in.</div></li>
				
				<li><div><span class="function"><a name="SetBit" id="SetBit"></a><strong>SetBit</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 3<br />
				<div class="parameters">
					valueToSet:Integer<br />
					bitToChange:Integer<br />
					<i>clearBit:Integer</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Sets the value of the specified bit. The optional parameter clears the value.</div></li>

				<li><div><span class="function"><a name="SetControl" id="SetControl"></a><strong>SetControl</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Assigns a new keycode to the specified keyboard control. Changes are saved to the .ini when the user exits the game.</div></li>
				
				<li><div><span class="function"><a name="SetCurrentHealth" id="SetCurrentHealth"></a><strong>SetCurrentHealth</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					newHealth:Float<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Sets the current health of the calling reference.</div></li>

				<li><div><span class="function"><a name="SetDebugMode" id="SetDebugMode"></a><strong>SetDebugMode</strong></span><br />
				<strong>Alias:</strong> dbmode<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					bEnableDebugMessages:Integer<br />
					<i>modIndex:Integer</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Toggles debug mode for all scripts belonging to a mod. When called in the console, the mod index of the mod for which debug messages are to be toggled can be specified by the second parameter (in decimal, not hexadecimal, format).</div></li>

				<li><div><span class="function"><a name="SetEquippedCurrentHealth" id="SetEquippedCurrentHealth"></a><strong>SetEquippedCurrentHealth</strong></span><br />
				<strong>Alias:</strong> SetEqCurHealth<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					val:Float<br />
					<a href="#Equipment_Slot_IDs">equipmentSlot:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Sets the current health of the equipped object at the given slot.</div></li>
				
				<li><div><span class="function"><a name="SetEquippedWeaponModFlags" id="SetEquippedWeaponModFlags"></a><strong>SetEquippedWeaponModFlags</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#Weapon_Mod_Flags">modFlags:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Sets the current health of the equipped object at the given slot.</div></li>

				<li><div><span class="function"><a name="SetHealth" id="SetHealth"></a><strong>SetHealth</strong></span><br />
				<strong>Alias:</strong> SetObjectHealth<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					newHealth:Integer<br />
					<i>form:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the health of the specified base form<br />
				</div></li>

				<li><div><span class="function"><a name="SetIsControl" id="SetIsControl"></a><strong>SetIsControl</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Bool<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Flags a key or mouse button as a control, allowing modders to define custom controls - other scripts can then use IsControl to detect conflicts in which two mods try to use the same key for different actions.</div></li>

				<li><div><span class="function"><a name="SetIsPowerArmor" id="SetIsPowerArmor"></a><strong>SetIsPowerArmor</strong></span><br />
				<strong>Alias:</strong> SetIsPA<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					path type:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets whether the armor is power armor or not.</div></li>

				<li><div><span class="function"><a name="SetName" id="SetName"></a><strong>SetName</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					name:String<br />
					<i>item:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the name of the object.</div></li>
				
				<li><div><span class="function"><a name="SetNameEx" id="SetNameEx"></a><strong>SetNameEx</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 21<br />
				<div class="parameters">
					<a href="#FormatSpecifiers">format string</a>:String<br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>item:GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Prints a formatted message to the top-left corner of the screen.</div></li>

				<li><div><span class="function"><a name="SetNumericGameSetting" id="SetNumericGameSetting"></a><strong>SetNumericGameSetting</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					settingName:String<br />
					float:Float<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Sets a numeric game setting. Accepts variables as arguments.</div></li>

				<li><div><span class="function"><a name="SetNumericIniSetting" id="SetNumericIniSetting"></a><strong>SetNumericIniSetting</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					settingName:String<br />
					newValue:Float<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Sets a numeric ini setting, using the same format for the setting name as GetNumericIniSetting. Accepts variables as arguments.</div></li>
				
				<li><div><span class="function"><a name="SetPlayerCurrentAmmoRounds" id="SetPlayerCurrentAmmoRounds"></a><strong>SetPlayerCurrentAmmoRounds</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					item:InventoryObject<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.5</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Sets the number of rounds in the player's currently equipped weapon.</div></li>
				
				<li><div><span class="function"><a name="SetQuestItem" id="SetQuestItem"></a><strong>SetQuestItem</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					isQuestItem:Bool<br />
					<i>item:GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets whether the item is a quest item.</div></li>
				
				<li><div><span class="function"><a name="SetRefCount" id="SetRefCount"></a><strong>SetRefCount</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					newCount:Integer<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">R</a><br />
				<strong>Description:</strong> Sets the number of items in a stack of items in the world. Note that while this function will change the count of any type of reference, it may have unpredictable results when used on references like NPCs which are not logically stackable.</div></li>

				<li><div><span class="function"><a name="SetRepairList" id="SetRepairList"></a><strong>SetRepairList</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					form list:FormList<br />
					<i>target item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the repair list for the specified item.</div></li>

				<li><div><span class="function"><a name="SetScript" id="SetScript"></a><strong>SetScript</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					scriptInRef:GenericObject<br />
					<i>item:GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> oldScript:BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.3</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the specified script onto the calling object and Returns any previous script. Note that Oblivion doesn't have a script variable type so you must assign the script to a ref variable for this to work. <strong>NOTE:</strong> If the specified object already has a script attached to it, after changing the script the stored values of local variables for references to that object will not match the variables in the new script. If called on a reference, the variable list for the calling reference will be updated to match the new script, but other references to the same base object will not be updated. <strong>Summary:</strong> SetScript is safe to use with quests, with previously unscripted objects, and on unique references (for which no other references exist to the same base object). Using the command on base objects for which non-unique references exist may result in undefined behavior.</div></li>

				<li><div><span class="function"><a name="SetUIFloat" id="SetUIFloat"></a><strong>SetUIFloat</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					traitName:String<br />
					newValue:Float<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Sets the value of a float UI trait. Trait name is of the format used by GetUIFloat.</div></li>

				<li><div><span class="function"><a name="SetUIString" id="SetUIString"></a><strong>SetUIString</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					traitName:String<br />
					newValue:String<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Sets the value of a string UI trait. Trait name is of the format used by GetUIFloat.</div></li>
				
				<li><div><span class="function"><a name="SetUIStringEx" id="SetUIStringEx"></a><strong>SetUIStringEx</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 21<br />
				<div class="parameters">
					traitName:String<br />
					<a href="#FormatSpecifiers">format string</a>:String<br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
					<i>variable:Float</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Sets the value of a string UI trait. Trait name is of the format used by GetUIFloat.</div></li>

				<li><div><span class="function"><a name="SetWeaponActionPoints" id="SetWeaponActionPoints"></a><strong>SetWeaponActionPoints</strong></span><br />
				<strong>Alias:</strong> SetAP<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon number of action pointer per shot.</div></li>

				<li><div><span class="function"><a name="SetWeaponAimArc" id="SetWeaponAimArc"></a><strong>SetWeaponAimArc</strong></span><br />
				<strong>Alias:</strong> SetAimArc<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					aimArc:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the aim arc of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponAmmo" id="SetWeaponAmmo"></a><strong>SetWeaponAmmo</strong></span><br />
				<strong>Alias:</strong> SetAmmo<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					NewAmmoInRef:MagicItem<br />
					<i>target item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> OldAmmo:BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the ammo of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponAmmoUse" id="SetWeaponAmmoUse"></a><strong>SetWeaponAmmoUse</strong></span><br />
				<strong>Alias:</strong> SetAmmoUse<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					path type:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon ammo use.</div></li>

				<li><div><span class="function"><a name="SetWeaponAnimAttackMult" id="SetWeaponAnimAttackMult"></a><strong>SetWeaponAnimAttackMult</strong></span><br />
				<strong>Alias:</strong> SetAnimAttackMult<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the anim attack multiplier.</div></li>

				<li><div><span class="function"><a name="SetWeaponAnimMult" id="SetWeaponAnimMult"></a><strong>SetWeaponAnimMult</strong></span><br />
				<strong>Alias:</strong> SetAnimMult<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the animiation multiple of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponAttackAnimation" id="SetWeaponAttackAnimation"></a><strong>SetWeaponAttackAnimation</strong></span><br />
				<strong>Alias:</strong> SetAttackAnim<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Attack_Animations">attackAnimation:Integer</a><br />
				<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the attack animation for the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponBaseVATSChance" id="SetWeaponBaseVATSChance"></a><strong>SetWeaponBaseVATSChance</strong></span><br />
				<strong>Alias:</strong> SetVATSChance<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					newVATSChance:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the base VATS chance for the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponClipRounds" id="SetWeaponClipRounds"></a><strong>SetWeaponClipRounds</strong></span><br />
				<strong>Alias:</strong> SetClipSize<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					path type:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon clip size.</div></li>

				<li><div><span class="function"><a name="SetWeaponCritChance" id="SetWeaponCritChance"></a><strong>SetWeaponCritChance</strong></span><br />
				<strong>Alias:</strong> SetCritPerc<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon critical hit chance.</div></li>

				<li><div><span class="function"><a name="SetWeaponCritDamage" id="SetWeaponCritDamage"></a><strong>SetWeaponCritDamage</strong></span><br />
				<strong>Alias:</strong> SetWeaponCritDamage<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					path type:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon critical hit damage.</div></li>

				<li><div><span class="function"><a name="SetWeaponCritEffect" id="SetWeaponCritEffect"></a><strong>SetWeaponCritEffect</strong></span><br />
				<strong>Alias:</strong> SetCritEffect<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					magic item:MagicItem<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> OldCriticalEffect:BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon critical hit effect.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponFireRate" id="SetWeaponFireRate"></a><strong>SetWeaponFireRate</strong></span><br />
				<strong>Alias:</strong> SetFireRate<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					path type:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.5</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon fire rate.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponFlags1" id="SetWeaponFlags1"></a><strong>SetWeaponFlags1</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Weapon_Flags_1">weaponFlags:Integer</a><br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon flags using integer bit value notation.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponFlags2" id="SetWeaponFlags2"></a><strong>SetWeaponFlags2</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Weapon_Flags_2">weaponFlags:Integer</a><br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.6</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon flags using integer bit value notation.</div></li>

				<li><div><span class="function"><a name="SetWeaponHandGrip" id="SetWeaponHandGrip"></a><strong>SetWeaponHandGrip</strong></span><br />
				<strong>Alias:</strong> SetHandGrip<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Weapon_Hand_Grips">handGrip:Integer</a><br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the hand grip of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponIsAutomatic" id="SetWeaponIsAutomatic"></a><strong>SetWeaponIsAutomatic</strong></span><br />
				<strong>Alias:</strong> SetIsAutomatic<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					isAutomatic:Bool<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets whether the weapon is an automatic weapon or not.</div></li>

				<li><div><span class="function"><a name="SetWeaponLimbDamageMult" id="SetWeaponLimbDamageMult"></a><strong>SetWeaponLimbDamageMult</strong></span><br />
				<strong>Alias:</strong> SetLimbDamageMult<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					limbDamageMult:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the limb damage multiplier for the weapon.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponLongBursts" id="SetWeaponLongBursts"></a><strong>SetWeaponLongBursts</strong></span><br />
				<strong>Alias:</strong> SetLongBursts<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					limbDamageMult:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.5</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the long burst value for the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponMaxRange" id="SetWeaponMaxRange"></a><strong>SetWeaponMaxRange</strong></span><br />
				<strong>Alias:</strong> SetMaxRange<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon max range.</div></li>

				<li><div><span class="function"><a name="SetWeaponMinRange" id="SetWeaponMinRange"></a><strong>SetWeaponMinRange</strong></span><br />
				<strong>Alias:</strong> SetMinRange<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon min range.</div></li>

				<li><div><span class="function"><a name="SetWeaponMinSpread" id="SetWeaponMinSpread"></a><strong>SetWeaponMinSpread</strong></span><br />
				<strong>Alias:</strong> SetMinSpread<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon min spread.</div></li>

				<li><div><span class="function"><a name="SetWeaponNumProjectiles" id="SetWeaponNumProjectiles"></a><strong>SetWeaponNumProjectiles</strong></span><br />
				<strong>Alias:</strong> SetNumProj<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					numProjectiles:Integer<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the number of projectiles the weapon fires each time it is shot.</div></li>

				<li><div><span class="function"><a name="SetWeaponProjectile" id="SetWeaponProjectile"></a><strong>SetWeaponProjectile</strong></span><br />
				<strong>Alias:</strong> SetProjectile<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					NewProjectileInRef:MagicItem<br />
					<i>target item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> OldProjectile:BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the projectile of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponReach" id="SetWeaponReach"></a><strong>SetWeaponReach</strong></span><br />
				<strong>Alias:</strong> SetReach<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					reach:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the reach of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponReloadAnim" id="SetWeaponReloadAnim"></a><strong>SetWeaponReloadAnim</strong></span><br />
				<strong>Alias:</strong> SetReloadAnim<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Reload_Animations">reloadAnim:Integer</a><br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the reload animation of the weapon.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponRequiredSkill" id="SetWeaponRequiredSkill"></a><strong>SetWeaponRequiredSkill</strong></span><br />
				<strong>Alias:</strong> SetReqSkill<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					newSkill:Integer
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the required skill level of the weapon.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponRequiredStrength" id="SetWeaponRequiredStrength"></a><strong>SetWeaponRequiredStrength</strong></span><br />
				<strong>Alias:</strong> SetReqStr<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					newStrength:Integer
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the required strength level of the weapon.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponResistType" id="SetWeaponResistType"></a><strong>SetWeaponResistType</strong></span><br />
				<strong>Alias:</strong> SetWeaponResist<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Actor_Value_Codes">resistValue:Integer</a>
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the required strength level of the weapon.</div></li>
				
				<li><div><span class="function"><a name="SetWeaponSkill" id="SetWeaponSkill"></a><strong>SetWeaponSkill</strong></span><br />
				<strong>Alias:</strong> SetWeaponResist<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Actor_Value_Codes">WeaponSkill:Integer</a>
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.2</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the skill type of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponSightFOV" id="SetWeaponSightFOV"></a><strong>SetWeaponSightFOV</strong></span><br />
				<strong>Alias:</strong> SetsightFOV<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon xoom field of view.</div></li>

				<li><div><span class="function"><a name="SetWeaponSightUsage" id="SetWeaponSightUsage"></a><strong>SetWeaponSightUsage</strong></span><br />
				<strong>Alias:</strong> SetsightUsage<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					sightUsage:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the sight usage for the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeaponSpread" id="SetWeaponSpread"></a><strong>SetWeaponSpread</strong></span><br />
				<strong>Alias:</strong> Setspread<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon spread.</div></li>

				<li><div><span class="function"><a name="SetWeaponType" id="SetWeaponType"></a><strong>SetWeaponType</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					<a href="#Weapon_Type">weaponType:Integer</a><br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weapon type of the weapon.</div></li>

				<li><div><span class="function"><a name="SetWeight" id="SetWeight"></a><strong>SetWeight</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					float:Float<br />
					<i>item:InventoryObject</i><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Sets the weight of the object.</div></li>
				
				<li><div><span class="function"><a name="SortUIListBox" id="SortUIListBox"></a><strong>SortUIListBox</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 2<br />
				<div class="parameters">
					path:String<br />
					sortSpec:String<br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.9</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByReference">B</a><br />
				<strong>Description:</strong> Sorts a specified list box.</div></li>
				
				<li><div><span class="function"><a name="TapControl" id="TapControl"></a><strong>TapControl</strong></span><br />
				<strong>Alias:</strong> tc<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#ControlCodes">controlCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Taps the key or mouse button assigned to control.</div></li>

				<li><div><span class="function"><a name="TapKey" id="TapKey"></a><strong>TapKey</strong></span><br />
				<strong>Alias:</strong> tk<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<a href="#DirectX_Scancodes">scanCode:Integer</a><br />
				</div>
				<strong>Return Type:</strong> Nothing<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">1.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByBaseForm">B</a><br />
				<strong>Description:</strong> Fakes a key press for one frame.</div></li>

				<li><div><span class="function"><a name="TempCloneForm" id="TempCloneForm"></a><strong>TempCloneForm</strong></span><br />
				<strong>Alias:</strong> none<br />
				<strong>Parameters:</strong> 1<br />
				<div class="parameters">
					<i>formToClone:</i><i>GenericObject</i><br />
				</div>
				<strong>Return Type:</strong> BaseForm<br />
				<strong>Condition Function:</strong> No<br />
				<strong>Introduced In: <span class="version">2.1</strong></span><br />
				<strong>Calling Convention:</strong><a href="#ByEither">E</a><br />
				<strong>Description:</strong> Clones the specified form and Returns a new base form. This base form will not be persisted in the save game.</div></li>
			</ul>
		</div>
		<script type="text/javascript">
			var options = {
				valueNames: [ 'function','version' ]
			};
			var featureList = new List('funcs_detail', options);
		</script>
	</div>
	
	<hr class="hor_line" />
	
	<div class="block"><!--Type Data-->
		<p><span class="Section_Head"><a name="FormatSpecifiers" id="FormatSpecifiers"></a>Format Specifiers</span></p>
		<p>Some NVSE commands take a <span id="mono">format string</span> as a parameter. Format strings are actually a collection of arguments consisting of a string followed by zero to twenty variables and/or numbers. The string specifies how the command should use the rest of the arguments to construct a new string. Within the format string, percent signs are used to indicate special  characters.</p>

		<p>The format specifiers recognized by NVSE commands include all of	those recognized by vanilla Fallout script commands like MessageBox as well as several extended specifiers:</p>

		<p>
			<ul class="mono_list">
				<li>%a - replaced by the character matching the ASCII code passed as an integer.</li>
				<li>%c - replaced by the sub-names from an ammo form (0 = full name, 1 = short name, 2 = abbreviation)
				<li>%e - replaced by nothing. Useful for passing an empty string as an argument, as the script compiler will not accept an empty string.</li>
				<li>%i - replaced by the formID of a reference or object	passed in a ref variable</li>
				<li>%k - replaced by a string representing the key associated with a DirectInput scan code</li>
				<li>%n - replaced with the name of a reference or object passed in a ref variable</li>
				<li>%p - replaced with a pronoun based on the gender of the object parameter passed in a ref variable:</li>
					<ul class="mono_list">
						<li>%po - objective &nbsp;(he, she, it)</li>
						<li>%pp - possessive (his, her, its)</li>
						<li>%ps - subjective (him, her, it)</li>
					</ul>
				<li>%q - replaced with a double quote character (takes no arguments)</li>
				<li>%r - replaced by a new-line character (takes no	arguments)</li>
				<li>%v - replaced by the name of an actor value passed as an integer <a href="#Actor_Value_Codes">actor value code</a></li>
				<li>%x - replaced with an integer in hexadecimal format. An optional digit from 0-9	immediately following this specifier indicates the minimum width of the displayed value. For example, <span style="font-weight: bold;">MessageEx "%x4" 255</span> will display "00FF".</span></li>
				<li>%{ .. %} - Conditionally omits a portion of the format string based on a boolean value. The left bracket accepts a variable; if the value of the variable is zero, all text up to the right	bracket will be ignored, and any parameters supplied to format specifiers within the omitted substring will be skipped.</li>
			</ul>
		</p>
		<p></span><li>Additional format specifiers used by the C function printf() may work as well. Due to the fact that integer script variables are stored as floats, specifiers expecting integers&nbsp;may not display the expected output.</p>
	</div>

	<hr class="hor_line" />
	
	<div class="block">
		<p><span class="Section_Head"><a name="Type_Codes" id="Type_Codes"></a>Type Codes</span></p>
		<p>
			<div class="Sub_Head"><a name="Form_Type_IDs" id="Form_Type_IDs"></a>Form Type IDs</div>
			<ul class="mono_list columns">
				<li>&nbsp;&nbsp;0:<span class="list_content">None</span></li>
				<li>&nbsp;&nbsp;1:<span class="list_content">TES4</span></li>
				<li>&nbsp;&nbsp;2:<span class="list_content">Group</span></li>
				<li>&nbsp;&nbsp;3:<span class="list_content">GMST</span></li>
				<li>&nbsp;&nbsp;4:<span class="list_content">TextureSet</span></li>
				<li>&nbsp;&nbsp;5:<span class="list_content">MenuIcon</span></li>
				<li>&nbsp;&nbsp;6:<span class="list_content">Global</span></li>
				<li>&nbsp;&nbsp;7:<span class="list_content">Class</span></li>
				<li>&nbsp;&nbsp;8:<span class="list_content">Faction</span></li>
				<li>&nbsp;&nbsp;9:<span class="list_content">HeadPart</span></li>
				<li>&nbsp;10:<span class="list_content">Hair</span></li>
				<li>&nbsp;11:<span class="list_content">Eyes</span></li>
				<li>&nbsp;12:<span class="list_content">Race</span></li>
				<li>&nbsp;13:<span class="list_content">Sound</span></li>
				<li>&nbsp;14:<span class="list_content">AcousticSpace</span></li>
				<li>&nbsp;15:<span class="list_content">Skill</span></li>
				<li>&nbsp;16:<span class="list_content">Effect</span></li>
				<li>&nbsp;17:<span class="list_content">Script</span></li>
				<li>&nbsp;18:<span class="list_content">LandTexture</span></li>
				<li>&nbsp;19:<span class="list_content">Enchantment</span></li>
				<li>&nbsp;20:<span class="list_content">Spell</span></li>
				<li>&nbsp;21:<span class="list_content">Activator</span></li>
				<li>&nbsp;22:<span class="list_content">TalkingActivator</span></li>
				<li>&nbsp;23:<span class="list_content">Terminal</span></li>
				<li>&nbsp;24:<span class="list_content">Armor</span></li>
				<li>&nbsp;25:<span class="list_content">Book</span></li>
				<li>&nbsp;26:<span class="list_content">Clothing</span></li>
				<li>&nbsp;27:<span class="list_content">Container</span></li>
				<li>&nbsp;28:<span class="list_content">Door</span></li>
				<li>&nbsp;29:<span class="list_content">Ingredient</span></li>
				<li>&nbsp;30:<span class="list_content">Light</span></li>
				<li>&nbsp;31:<span class="list_content">Misc</span></li>
				<li>&nbsp;32:<span class="list_content">Static</span></li>
				<li>&nbsp;33:<span class="list_content">StaticCollection</span></li>
				<li>&nbsp;34:<span class="list_content">MoveableStatic</span></li>
				<li>&nbsp;35:<span class="list_content">PlaceableWater</span></li>
				<li>&nbsp;36:<span class="list_content">Grass</span></li>
				<li>&nbsp;37:<span class="list_content">Tree</span></li>
				<li>&nbsp;38:<span class="list_content">Flora</span></li>
				<li>&nbsp;39:<span class="list_content">Furniture</span></li>
				<li>&nbsp;40:<span class="list_content">Weapon</span></li>
				<li>&nbsp;41:<span class="list_content">Ammo</span></li>
				<li>&nbsp;42:<span class="list_content">NPC</span></li>
				<li>&nbsp;43:<span class="list_content">Creature</span></li>
				<li>&nbsp;44:<span class="list_content">LeveledCreature</span></li>
				<li>&nbsp;45:<span class="list_content">LeveledCharacter</span></li>
				<li>&nbsp;46:<span class="list_content">Key</span></li>
				<li>&nbsp;47:<span class="list_content">AlchemyItem</span></li>
				<li>&nbsp;48:<span class="list_content">IdleMarker</span></li>
				<li>&nbsp;49:<span class="list_content">Note</span></li>
				<li>&nbsp;50:<span class="list_content">ConstructibleObject</span></li>
				<li>&nbsp;51:<span class="list_content">Projectile</span></li>
				<li>&nbsp;52:<span class="list_content">LeveledItem</span></li>
				<li>&nbsp;53:<span class="list_content">Weather</span></li>
				<li>&nbsp;54:<span class="list_content">Climate</span></li>
				<li>&nbsp;55:<span class="list_content">Region</span></li>
				<li>&nbsp;56:<span class="list_content">NAVI</span></li>
				<li>&nbsp;57:<span class="list_content">Cell</span></li>
				<li>&nbsp;58:<span class="list_content">Reference</span></li>
				<li>&nbsp;59:<span class="list_content">ACHR</span></li>
				<li>&nbsp;60:<span class="list_content">ACRE</span></li>
				<li>&nbsp;61:<span class="list_content">PMIS</span></li>
				<li>&nbsp;62:<span class="list_content">PGRE</span></li>
				<li>&nbsp;63:<span class="list_content">PBEA</span></li>
				<li>&nbsp;64:<span class="list_content">PFLA</span></li>
				<li>&nbsp;65:<span class="list_content">WorldSpace</span></li>
				<li>&nbsp;66:<span class="list_content">Land</span></li>
				<li>&nbsp;67:<span class="list_content">NavMesh</span></li>
				<li>&nbsp;68:<span class="list_content">TLOD</span></li>
				<li>&nbsp;69:<span class="list_content">DIAL</span></li>
				<li>&nbsp;70:<span class="list_content">INFO</span></li>
				<li>&nbsp;71:<span class="list_content">Quest</span></li>
				<li>&nbsp;72:<span class="list_content">Idle</span></li>
				<li>&nbsp;73:<span class="list_content">Package</span></li>
				<li>&nbsp;74:<span class="list_content">CombatStyle</span></li>
				<li>&nbsp;75:<span class="list_content">LoadScreen</span></li>
				<li>&nbsp;76:<span class="list_content">LeveledSpell</span></li>
				<li>&nbsp;77:<span class="list_content">ANIO</span></li>
				<li>&nbsp;78:<span class="list_content">WaterForm</span></li>
				<li>&nbsp;79:<span class="list_content">EffectShader</span></li>
				<li>&nbsp;80:<span class="list_content">TOFT</span></li>
				<li>&nbsp;81:<span class="list_content">Explosion</span></li>
				<li>&nbsp;82:<span class="list_content">Debris</span></li>
				<li>&nbsp;83:<span class="list_content">ImageSpace</span></li>
				<li>&nbsp;84:<span class="list_content">ImageSpaceModifier</span></li>
				<li>&nbsp;85:<span class="list_content">ListForm</span></li>
				<li>&nbsp;86:<span class="list_content">Perk</span></li>
				<li>&nbsp;87:<span class="list_content">BodyPartData</span></li>
				<li>&nbsp;88:<span class="list_content">AddonNode</span></li>
				<li>&nbsp;89:<span class="list_content">ActorValueInfo</span></li>
				<li>&nbsp;90:<span class="list_content">RadiationStage</span></li>
				<li>&nbsp;91:<span class="list_content">CameraShot</span></li>
				<li>&nbsp;92:<span class="list_content">CameraPath</span></li>
				<li>&nbsp;93:<span class="list_content">VoiceType</span></li>
				<li>&nbsp;94:<span class="list_content">ImpactData</span></li>
				<li>&nbsp;95:<span class="list_content">ImpactDataSet</span></li>
				<li>&nbsp;96:<span class="list_content">ARMA</span></li>
				<li>&nbsp;97:<span class="list_content">EncounterZone</span></li>
				<li>&nbsp;98:<span class="list_content">Message</span></li>
				<li>&nbsp;99:<span class="list_content">Ragdoll</span></li>
				<li>100:<span class="list_content">DOBJ</span></li>
				<li>101:<span class="list_content">LightingTemplate</span></li>
				<li>102:<span class="list_content">SoundFile</span></li>
				<li>200:<span class="list_content">Actor (for ref walking only)</span></li>
				<li>201:<span class="list_content">Inventory Object (for ref walking only)</span></li>
			</ul>
		</p>

		<p>
			<div class="Sub_Head"><a name="Equip_Type" id="Equip_Type"></a>Equip Type</div>
		</p>

		<p>
			<div class="Sub_Head"><a name="Equipment_Slot_IDs" id="Equipment_Slot_IDs"></a>Equipment Slot IDs</div>
			<ul class="mono_list columns">
				<li>&nbsp;0:<span class="list_content">head</span></li>
				<li>&nbsp;1:<span class="list_content">hair</span></li>
				<li>&nbsp;2:<span class="list_content">upper body</span></li>
				<li>&nbsp;3:<span class="list_content">left hand</span></li>
				<li>&nbsp;4:<span class="list_content">right hand</span></li>
				<li>&nbsp;5:<span class="list_content">weapon</span></li>
				<li>&nbsp;6:<span class="list_content">pip boy</span></li>
				<li>&nbsp;7:<span class="list_content">backpack</span></li>
				<li>&nbsp;8:<span class="list_content">necklace</span></li>
				<li>&nbsp;9:<span class="list_content">headband</span></li>
				<li>10:<span class="list_content">hat</span></li>
				<li>11:<span class="list_content">eyeglasses</span></li>
				<li>12:<span class="list_content">nosering</span></li>
				<li>13:<span class="list_content">earrings</span></li>
				<li>14:<span class="list_content">mask</span></li>
				<li>15:<span class="list_content">choker</span></li>
				<li>16:<span class="list_content">mouth object</span></li>
				<li>17:<span class="list_content">body addon 1</span></li>
				<li>18:<span class="list_content">body addon 2</span></li>
				<li>19:<span class="list_content">body addon 3</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Weapon_Flags_1" id="Weapon_Flags_1"></a>Weapon Flags 1</div>
			<ul class="mono_list columns">
				<li>&nbsp;&nbsp;1:<span class="list_content">ignores normal weapon resist</span></li>
				<li>&nbsp;&nbsp;2:<span class="list_content">is automatic</span></li>
				<li>&nbsp;&nbsp;4:<span class="list_content">has scope</span></li>
				<li>&nbsp;&nbsp;8:<span class="list_content">can't drop</span></li>
				<li>&nbsp;16:<span class="list_content">hide backpack</span></li>
				<li>&nbsp;32:<span class="list_content">embedded weapon</span></li>
				<li>&nbsp;64:<span class="list_content">don't use first-person IS animations</span></li>
				<li>128:<span class="list_content">nonplayable</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Weapon_Flags_2" id="Weapon_Flags_2"></a>Weapon Flags 2</div>
			<ul class="mono_list columns">
				<li>&nbsp;&nbsp;&nbsp;1:<span class="list_content">player only</span></li>
				<li>&nbsp;&nbsp;&nbsp;2:<span class="list_content">NPCs use ammo</span></li>
				<li>&nbsp;&nbsp;&nbsp;4:<span class="list_content">no jam after reload</span></li>
				<li>&nbsp;&nbsp;&nbsp;8:<span class="list_content">override action points</span></li>
				<li>&nbsp;&nbsp;16:<span class="list_content">minor crime</span></li>
				<li>&nbsp;&nbsp;32:<span class="list_content">range fixed</span></li>
				<li>&nbsp;&nbsp;64:<span class="list_content">not used in normal combat</span></li>
				<li>&nbsp;128:<span class="list_content">override damage to weapon mult</span></li>
				<li>&nbsp;256:<span class="list_content">don't use third-person IS animations</span></li>
				<li>&nbsp;512:<span class="list_content">short burst</span></li>
				<li>1024:<span class="list_content">rumble alternate</span></li>
				<li>2048:<span class="list_content">long burst</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Weapon_Hand_Grips" id="Weapon_Hand_Grips"></a>Weapon Hand Grips</div>
			<ul class="mono_list columns">
				<li>0:<span class="list_content">default</span></li>
				<li>1:<span class="list_content">hand grip 1</span></li>
				<li>2:<span class="list_content">hand grip 2</span></li>
				<li>3:<span class="list_content">hand grip 3</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Weapon_Mod_Effect" id="Weapon_Mod_Effect"></a>Weapon Mod Effect</div>
			<ul class="mono_list columns">
				<li>&nbsp;0:<span class="list_content">None</span></li>
				<li>&nbsp;1:<span class="list_content">Increase Weapon Damage</span></li>
				<li>&nbsp;2:<span class="list_content">Increase Clip Capacity</span></li>
				<li>&nbsp;3:<span class="list_content">Decrease Spread</span></li>
				<li>&nbsp;4:<span class="list_content">Decrease Weight</span></li>
				<li>&nbsp;5:<span class="list_content">&lt;Unused&gt;</span></li>
				<li>&nbsp;6:<span class="list_content">Regenerate Ammo</span></li>
				<li>&nbsp;7:<span class="list_content">Decrease Equip Time</span></li>
				<li>&nbsp;8:<span class="list_content">Increase Rate of Fire</span></li>
				<li>&nbsp;9:<span class="list_content">Increase Projectile Speed</span></li>
				<li>10:<span class="list_content">Increase Max. Condition</span></li>
				<li>11:<span class="list_content">Silence</span></li>
				<li>12:<span class="list_content">Split Beam</span></li>
				<li>13:<span class="list_content">VATS Bonus</span></li>
				<li>14:<span class="list_content">Increase Zoom</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Weapon_Mod_Flags" id="Weapon_Mod_Flags"></a>Weapon Mod Flags</div>
			<ul class="mono_list columns">
				<li>1:<span class="list_content">Weapon Mod 1</span></li>
				<li>2:<span class="list_content">Weapon Mod 2</span></li>
				<li>4:<span class="list_content">Weapon Mod 3</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Mod_Index" id="Mod_Index"></a>Weapon Mod Index</div>
			<ul class="mono_list columns">
				<li>1:<span class="list_content">Weapon Mod 1</span></li>
				<li>2:<span class="list_content">Weapon Mod 2</span></li>
				<li>3:<span class="list_content">Weapon Mod 3</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Weapon_Type" id="Weapon_Type"></a>Weapon Type</div>
			<ul class="mono_list columns">
				<li>&nbsp;0:<span class="list_content">HandToHandMelee</span></li>
				<li>&nbsp;1:<span class="list_content">OneHandMelee</span></li>
				<li>&nbsp;2:<span class="list_content">TwoHandMelee</span></li>
				<li>&nbsp;3:<span class="list_content">OneHandPistol</span></li>
				<li>&nbsp;4:<span class="list_content">OneHandPistolEnergy</span></li>
				<li>&nbsp;5:<span class="list_content">TwoHandRifle</span></li>
				<li>&nbsp;6:<span class="list_content">TwoHandAutomatic</span></li>
				<li>&nbsp;7:<span class="list_content">TwoHandRifleEnergy</span></li>
				<li>&nbsp;8:<span class="list_content">TwoHandHandle</span></li>
				<li>&nbsp;9:<span class="list_content">TwoHandLauncher</span></li>
				<li>10:<span class="list_content">OneHandGrenade</span></li>
				<li>11:<span class="list_content">OneHandMine</span></li>
				<li>12:<span class="list_content">OneHandLunchboxMine</span></li>
				<li>13:<span class="list_content">OneHandThrown</span></li>
			</ul>
		</p>

		<p>
			<div class="Sub_Head"><a name="Attack_Animations" id="Attack_Animations"></a>Attack Animations</div>
			<ul class="mono_list columns">
				<li>&nbsp;0:<span class="list_content">default</span></li>
				<li>&nbsp;1:<span class="list_content">Attack 3</span></li>
				<li>&nbsp;2:<span class="list_content">Attack 4</span></li>
				<li>&nbsp;3:<span class="list_content">Attack 5</span></li>
				<li>&nbsp;4:<span class="list_content">Attack 6</span></li>
				<li>&nbsp;5:<span class="list_content">Attack 7</span></li>
				<li>&nbsp;6:<span class="list_content">Attack 8</span></li>
				<li>&nbsp;7:<span class="list_content">Attack Left</span></li>
				<li>&nbsp;8:<span class="list_content">Attack Loop</span></li>
				<li>&nbsp;9:<span class="list_content">Attack Right</span></li>
				<li>10:<span class="list_content">Attack Spin</span></li>
				<li>11:<span class="list_content">Attack Spin 2</span></li>
				<li>12:<span class="list_content">Attack Throw</span></li>
				<li>13:<span class="list_content">Attack Throw 2</span></li>
				<li>14:<span class="list_content">Attack Throw 3</span></li>
				<li>15:<span class="list_content">Attack Throw 4</span></li>
				<li>16:<span class="list_content">Attack Throw 5</span></li>
				<li>17:<span class="list_content">Place Mine</span></li>
				<li>18:<span class="list_content">Place Mine 2</span></li>
			</ul>
		</p>

		<p>
			<div class="Sub_Head"><a name="Reload_Animations" id="Reload_Animations"></a>Reload Animations</div>
			<ul class="mono_list columns">
				<li>&nbsp;0:<span class="list_content">Reload A</span></li>
				<li>&nbsp;1:<span class="list_content">Reload B</span></li>
				<li>&nbsp;2:<span class="list_content">Reload C</span></li>
				<li>&nbsp;3:<span class="list_content">Reload D</span></li>
				<li>&nbsp;4:<span class="list_content">Reload E</span></li>
				<li>&nbsp;5:<span class="list_content">Reload F</span></li>
				<li>&nbsp;6:<span class="list_content">Reload G</span></li>
				<li>&nbsp;7:<span class="list_content">Reload H</span></li>
				<li>&nbsp;8:<span class="list_content">Reload I</span></li>
				<li>&nbsp;9:<span class="list_content">Reload J</span></li>
				<li>10:<span class="list_content">Reload K</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Actor_Flags_High" id="Actor_Flags_High"></a>Actor Flags High</div>
			<ul class="mono_list columns">
				<li>&nbsp;&nbsp;&nbsp;&nbsp;1:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;&nbsp;&nbsp;2:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;&nbsp;&nbsp;4:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;&nbsp;&nbsp;8:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;&nbsp;16:<span class="list_content">no VATS melee</span></li>
				<li>&nbsp;&nbsp;&nbsp;32:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;&nbsp;64:<span class="list_content">can be all races</span></li>
				<li>&nbsp;&nbsp;128:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;256:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;512:<span class="list_content">unknown</span></li>
				<li>&nbsp;1024:<span class="list_content">no knockdowns</span></li>
				<li>&nbsp;2048:<span class="list_content">not pushable</span></li>
				<li>&nbsp;4096:<span class="list_content">unknown</span></li>
				<li>&nbsp;8192:<span class="list_content">unknown</span></li>
				<li>16384:<span class="list_content">no rotate to head track</span></li>
				<li>32768:<span class="list_content">unknown</span></li>
			</ul>
		</p>
		
		<p>
			<div class="Sub_Head"><a name="Actor_Flags_Low" id="Actor_Flags_Low"></a>Actor Flags Low</div>
			<ul class="mono_list columns">
				<li>&nbsp;&nbsp;&nbsp;&nbsp;1:<span class="list_content">female</span></li>
				<li>&nbsp;&nbsp;&nbsp;&nbsp;2:<span class="list_content">essential</span></li>
				<li>&nbsp;&nbsp;&nbsp;&nbsp;4:<span class="list_content">has chargen face</span></li>
				<li>&nbsp;&nbsp;&nbsp;&nbsp;8:<span class="list_content">respawn</span></li>
				<li>&nbsp;&nbsp;&nbsp;16:<span class="list_content">auto-calc stats</span></li>
				<li>&nbsp;&nbsp;&nbsp;32:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;&nbsp;64:<span class="list_content">unknown</span></li>
				<li>&nbsp;&nbsp;128:<span class="list_content">pc level mult</span></li>
				<li>&nbsp;&nbsp;256:<span class="list_content">use template</span></li>
				<li>&nbsp;&nbsp;512:<span class="list_content">no low-level processing</span></li>
				<li>&nbsp;1024:<span class="list_content">unknown</span></li>
				<li>&nbsp;2048:<span class="list_content">no blood spray</span></li>
				<li>&nbsp;4096:<span class="list_content">no blood decal</span></li>
				<li>&nbsp;8192:<span class="list_content">unknown</span></li>
				<li>16384:<span class="list_content">unknown</span></li>
				<li>32768:<span class="list_content">unknown</span></li>
			</ul>
		</p>

		<p>
			<div class="Sub_Head"><a name="Actor_Value_Codes" id="Actor_Value_Codes"></a>Actor Value Codes</div>
			<ul class="mono_list columns">
				<li>&nbsp;0:<span class="list_content">Aggression</span></li>
				<li>&nbsp;1:<span class="list_content">Confidence</span></li>
				<li>&nbsp;2:<span class="list_content">Energy</span></li>
				<li>&nbsp;3:<span class="list_content">Responsibility</span></li>
				<li>&nbsp;4:<span class="list_content">Mood</span></li>
				<li>&nbsp;5:<span class="list_content">Strength</span></li>
				<li>&nbsp;6:<span class="list_content">Perception</span></li>
				<li>&nbsp;7:<span class="list_content">Endurance</span></li>
				<li>&nbsp;8:<span class="list_content">Charisma</span></li>
				<li>&nbsp;9:<span class="list_content">Intelligence</span></li>
				<li>10:<span class="list_content">Agility</span></li>
				<li>11:<span class="list_content">Luck</span></li>
				<li>12:<span class="list_content">ActionPoints</span></li>
				<li>13:<span class="list_content">CarryWeight</span></li>
				<li>14:<span class="list_content">CritChance</span></li>
				<li>15:<span class="list_content">HealRate</span></li>
				<li>16:<span class="list_content">Health</span></li>
				<li>17:<span class="list_content">MeleeDamage</span></li>
				<li>18:<span class="list_content">DamageResistance</span></li>
				<li>19:<span class="list_content">PoisonResistance</span></li>
				<li>20:<span class="list_content">RadResistance</span></li>
				<li>21:<span class="list_content">SpeedMultiplier</span></li>
				<li>22:<span class="list_content">Fatigue</span></li>
				<li>23:<span class="list_content">Karma</span></li>
				<li>24:<span class="list_content">XP</span></li>
				<li>25:<span class="list_content">Head</span></li>
				<li>26:<span class="list_content">Torso</span></li>
				<li>27:<span class="list_content">LeftArm</span></li>
				<li>28:<span class="list_content">RightArm</span></li>
				<li>29:<span class="list_content">LeftLeg</span></li>
				<li>30:<span class="list_content">RightLeg</span></li>
				<li>31:<span class="list_content">Brain</span></li>
				<li>32:<span class="list_content">Barter</span></li>
				<li>33:<span class="list_content">BigGuns</span></li>
				<li>34:<span class="list_content">EnergyWeapons</span></li>
				<li>35:<span class="list_content">Explosives</span></li>
				<li>36:<span class="list_content">Lockpick</span></li>
				<li>37:<span class="list_content">Medicine</span></li>
				<li>38:<span class="list_content">MeleeWeapons</span></li>
				<li>39:<span class="list_content">Repair</span></li>
				<li>40:<span class="list_content">Science</span></li>
				<li>41:<span class="list_content">SmallGuns</span></li>
				<li>42:<span class="list_content">Sneak</span></li>
				<li>43:<span class="list_content">Speech</span></li>
				<li>44:<span class="list_content">Throwing</span></li>
				<li>45:<span class="list_content">Unarmed</span></li>
				<li>46:<span class="list_content">InventoryWeight</span></li>
				<li>47:<span class="list_content">Paralysis</span></li>
				<li>48:<span class="list_content">Invisibility</span></li>
				<li>49:<span class="list_content">Chameleon</span></li>
				<li>50:<span class="list_content">NightEye</span></li>
				<li>51:<span class="list_content">DetectLifeRange</span></li>
				<li>52:<span class="list_content">FireResistance</span></li>
				<li>53:<span class="list_content">WaterBreathing</span></li>
				<li>54:<span class="list_content">RadLevel</span></li>
				<li>55:<span class="list_content">BloodyMess</span></li>
				<li>56:<span class="list_content">UnarmedDamage</span></li>
				<li>57:<span class="list_content">Assistance</span></li>
				<li>60:<span class="list_content">EnergyResistance</span></li>
				<li>61:<span class="list_content">EMPResistance</span></li>
				<li>62:<span class="list_content">Var1Medical</span></li>
				<li>72:<span class="list_content">IgnoreCrippledLimbs</span></li>
			</ul>
		</p>

		<p>
			<div class="Sub_Head"><a name="ControlCodes" id="ControlCodes"></a>Control Codes</div>
			<ul class="mono_list columns">
				<li>&nbsp;0:<span class="list_content">Forward</span></li>
				<li>&nbsp;1:<span class="list_content">Backward</span></li>
				<li>&nbsp;2:<span class="list_content">Left</span></li>
				<li>&nbsp;3:<span class="list_content">Right</span></li>
				<li>&nbsp;4:<span class="list_content">Attack</span></li>
				<li>&nbsp;5:<span class="list_content">Activate</span></li>
				<li>&nbsp;6:<span class="list_content">Block</span></li>
				<li>&nbsp;7:<span class="list_content">Ready Item</span></li>
				<li>&nbsp;8:<span class="list_content">Crouch</span></li>
				<li>&nbsp;9:<span class="list_content">Run</span></li>
				<li>10:<span class="list_content">Always Run</span></li>
				<li>11:<span class="list_content">Auto-Move</span></li>
				<li>12:<span class="list_content">Jump</span></li>
				<li>13:<span class="list_content">TogglePOV</span></li>
				<li>14:<span class="list_content">MenuMode</span></li>
				<li>15:<span class="list_content">Rest</span></li>
				<li>16:<span class="list_content">VATS</span></li>
				<li>17:<span class="list_content">Hotkey 1</span></li>
				<li>18:<span class="list_content">Hotkey 2 (Ammo swap key)</span></li>
				<li>19:<span class="list_content">Hotkey 3</span></li>
				<li>20:<span class="list_content">Hotkey 4</span></li>
				<li>21:<span class="list_content">Hotkey 5</span></li>
				<li>22:<span class="list_content">Hotkey 6</span></li>
				<li>23:<span class="list_content">Hotkey 7</span></li>
				<li>24:<span class="list_content">Hotkey 8</span></li>
				<li>25:<span class="list_content">Quicksave</span></li>
				<li>26:<span class="list_content">Quickload</span></li>
				<li>27:<span class="list_content">Grab</span></li>
			</ul>
		</p>

		<p>
				<div class="Sub_Head"><a name="DirectX_Scancodes" id="DirectX_Scancodes"></a>DirectX Scancodes</div>
			<ul class="mono_list columns">
				<li>&nbsp;&nbsp;1:<span class="list_content">Escape</span></li>
				<li>&nbsp;&nbsp;2:<span class="list_content">1</span></li>
				<li>&nbsp;&nbsp;3:<span class="list_content">2</span></li>
				<li>&nbsp;&nbsp;4:<span class="list_content">3</span></li>
				<li>&nbsp;&nbsp;5:<span class="list_content">4</span></li>
				<li>&nbsp;&nbsp;6:<span class="list_content">5</span></li>
				<li>&nbsp;&nbsp;7:<span class="list_content">6</span></li>
				<li>&nbsp;&nbsp;8:<span class="list_content">7</span></li>
				<li>&nbsp;&nbsp;9:<span class="list_content">8</span></li>
				<li>&nbsp;10:<span class="list_content">9</span></li>
				<li>&nbsp;11:<span class="list_content">0</span></li>
				<li>&nbsp;12:<span class="list_content">Minus</span></li>
				<li>&nbsp;13:<span class="list_content">Equals</span></li>
				<li>&nbsp;14:<span class="list_content">Backspace</span></li>
				<li>&nbsp;15:<span class="list_content">Tab</span></li>
				<li>&nbsp;16:<span class="list_content">Q</span></li>
				<li>&nbsp;17:<span class="list_content">W</span></li>
				<li>&nbsp;18:<span class="list_content">E</span></li>
				<li>&nbsp;19:<span class="list_content">R</span></li>
				<li>&nbsp;20:<span class="list_content">T</span></li>
				<li>&nbsp;21:<span class="list_content">Y</span></li>
				<li>&nbsp;22:<span class="list_content">U</span></li>
				<li>&nbsp;23:<span class="list_content">I</span></li>
				<li>&nbsp;24:<span class="list_content">O</span></li>
				<li>&nbsp;25:<span class="list_content">P</span></li>
				<li>&nbsp;26:<span class="list_content">LeftBracket</span></li>
				<li>&nbsp;27:<span class="list_content">RightBracket</span></li>
				<li>&nbsp;28:<span class="list_content">Enter</span></li>
				<li>&nbsp;29:<span class="list_content">LeftControl</span></li>
				<li>&nbsp;30:<span class="list_content">A</span></li>
				<li>&nbsp;31:<span class="list_content">S</span></li>
				<li>&nbsp;32:<span class="list_content">D</span></li>
				<li>&nbsp;33:<span class="list_content">F</span></li>
				<li>&nbsp;34:<span class="list_content">G</span></li>
				<li>&nbsp;35:<span class="list_content">H</span></li>
				<li>&nbsp;36:<span class="list_content">J</span></li>
				<li>&nbsp;37:<span class="list_content">K</span></li>
				<li>&nbsp;38:<span class="list_content">L</span></li>
				<li>&nbsp;39:<span class="list_content">Semicolon</span></li>
				<li>&nbsp;40:<span class="list_content">Apostrophe</span></li>
				<li>&nbsp;41:<span class="list_content">~(Console)</span></li>
				<li>&nbsp;42:<span class="list_content">LeftShift</span></li>
				<li>&nbsp;43:<span class="list_content">BackSlash</span></li>
				<li>&nbsp;44:<span class="list_content">Z</span></li>
				<li>&nbsp;45:<span class="list_content">X</span></li>
				<li>&nbsp;46:<span class="list_content">C</span></li>
				<li>&nbsp;47:<span class="list_content">V</span></li>
				<li>&nbsp;48:<span class="list_content">B</span></li>
				<li>&nbsp;49:<span class="list_content">N</span></li>
				<li>&nbsp;50:<span class="list_content">M</span></li>
				<li>&nbsp;51:<span class="list_content">Comma</span></li>
				<li>&nbsp;52:<span class="list_content">Period</span></li>
				<li>&nbsp;53:<span class="list_content">Forward Slash</span></li>
				<li>&nbsp;54:<span class="list_content">Right Shift</span></li>
				<li>&nbsp;55:<span class="list_content">NUM*</span></li>
				<li>&nbsp;56:<span class="list_content">Left Alt</span></li>
				<li>&nbsp;57:<span class="list_content">Spacebar</span></li>
				<li>&nbsp;58:<span class="list_content">Caps Lock</span></li>
				<li>&nbsp;59:<span class="list_content">F1</span></li>
				<li>&nbsp;60:<span class="list_content">F2</span></li>
				<li>&nbsp;61:<span class="list_content">F3</span></li>
				<li>&nbsp;62:<span class="list_content">F4</span></li>
				<li>&nbsp;63:<span class="list_content">F5</span></li>
				<li>&nbsp;64:<span class="list_content">F6</span></li>
				<li>&nbsp;65:<span class="list_content">F7</span></li>
				<li>&nbsp;66:<span class="list_content">F8</span></li>
				<li>&nbsp;67:<span class="list_content">F9</span></li>
				<li>&nbsp;68:<span class="list_content">F10</span></li>
				<li>&nbsp;69:<span class="list_content">Num Lock</span></li>
				<li>&nbsp;70:<span class="list_content">Scroll Lock</span></li>
				<li>&nbsp;71:<span class="list_content">NUM7</span></li>
				<li>&nbsp;72:<span class="list_content">NUM8</span></li>
				<li>&nbsp;73:<span class="list_content">NUM9</span></li>
				<li>&nbsp;74:<span class="list_content">NUM-</span></li>
				<li>&nbsp;75:<span class="list_content">NUM4</span></li>
				<li>&nbsp;76:<span class="list_content">NUM5</span></li>
				<li>&nbsp;77:<span class="list_content">NUM6</span></li>
				<li>&nbsp;78:<span class="list_content">NUM+</span></li>
				<li>&nbsp;79:<span class="list_content">NUM1</span></li>
				<li>&nbsp;80:<span class="list_content">NUM2</span></li>
				<li>&nbsp;81:<span class="list_content">NUM3</span></li>
				<li>&nbsp;82:<span class="list_content">NUM0</span></li>
				<li>&nbsp;83:<span class="list_content">NUM.</span></li>
				<li>&nbsp;87:<span class="list_content">F11</span></li>
				<li>&nbsp;88:<span class="list_content">F12</span></li>
				<li>156:<span class="list_content">NUM Enter</span></li>
				<li>157:<span class="list_content">Right Control</span></li>
				<li>181:<span class="list_content">NUM/</span></li>
				<li>184:<span class="list_content">Right Alt</span></li>
				<li>200:<span class="list_content">Up Arrow</span></li>
				<li>203:<span class="list_content">Left Arrow</span></li>
				<li>205:<span class="list_content">Right Arrow</span></li>
				<li>208:<span class="list_content">Down Arrow</span></li>
				<li>256:<span class="list_content">Left Mouse Button</span></li>
				<li>257:<span class="list_content">Right Mouse Button</span></li>
				<li>258:<span class="list_content">Middle/Wheel Mouse Button</span></li>
				<li>259:<span class="list_content">Mouse Button 3</span></li>
				<li>260:<span class="list_content">Mouse Button 4</span></li>
				<li>261:<span class="list_content">Mouse Button 5</span></li>
				<li>262:<span class="list_content">Mouse Button 6</span></li>
				<li>263:<span class="list_content">Mouse Button 7</span></li>
				<li>264:<span class="list_content">Mouse Wheel Up</span></li>
				<li>265:<span class="list_content">Mouse Wheel Down</span></li>
			</ul>
		</p>
	</div>
	
	<div class="block"><!--Additional_Resources-->
	<p><span class="Section_Head"><a name="Additional_Resources" id="Additional_Resources"></a>Additional Resources</span></p>
		<p>Other resources exist that can help when writing scripts.</p>
		
		<p>Cipscis has a great website with <a href="http://www.cipscis.com/fallout/tutorials/">scripting tutorials</a> on various more advanced topics. He also has a <a href="http://www.cipscis.com/fallout/utilities/validator.aspx">script validator</a> that will work with most of the NVSE functions, though it might not recognize some of the newest things. Make sure you set it to New Vegas mode or it will throw out a bunch of errors.</p>
		
		<p>I've also set up a utility for use with <a href="http://notepad-plus-plus.org/">Notepad++</a> that will add syntax highlighting and even function auto-complete for writing GECK scripts. I try to keep it as up-to-date as possible, so check back periodically for new versions of the files.</p>
		
		<p>
			<a href="https://docs.google.com/file/d/0B-rpBcVy8AL7S2RhbExNSzZHVlU/edit?usp=sharing">Notepad++ Files</a> <span id="VersionNumber"></span>
		
			<script>
				$.getJSON("https://googledrive.com/host/0B-rpBcVy8AL7Zm13WnFQZGQ5eXM/userlangsversion.txt", function(data) {
					$("#VersionNumber").html('<p>' + 'Current Version: ' + data.currentVersion.version + ' on ' + data.currentVersion.date + '</p>' + '<p>' + 'Previous Version: ' + data.previousVersion.version + ' on ' + data.previousVersion.date + '</p>');
				})
			</script>
		</p>
	</div>
	
</body>

	<script type="text/javascript">
		function date_ddmmmyy(c){var e=c.getDate();var a=c.getMonth()+1;var f=c.getYear();if(f>=2000){f-=2000}if(f>=100){f-=100}var b=(1==a)?"Jan":(2==a)?"Feb":(3==a)?"Mar":(4==a)?"Apr":(5==a)?"May":(6==a)?"Jun":(7==a)?"Jul":(8==a)?"Aug":(9==a)?"Sep":(10==a)?"Oct":(11==a)?"Nov":"Dec";return""+(e<10?"0"+e:e)+"-"+b+"-"+(f<10?"0"+f:f)}function date_lastmodified(){var a=document.lastModified;var b="Unknown";var c;if(0!=(c=Date.parse(a))){b=""+date_ddmmmyy(new Date(c))}return b}
		$("#modifiedDate").html("This page was last modified on "+date_lastmodified());
	</script>
</html>
