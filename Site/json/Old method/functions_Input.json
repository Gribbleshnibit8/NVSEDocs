[{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"},{"type":"filter:Integer","optional":"true"}],"ReturnType":[{"type":"Bool"}],"Description":["Return if a dx scancode is down or up. The optional integer is a bitfield, so the following values can be added together:","1 = Return game state (buttons as seen by the game after all filtering, previous default behavior)","2 = Return raw state (unfiltered buttons, exactly what is being pressed)","4 = Return inserted state (scripted keypresses only) if multiple of the above are selected, then they are logically or'd together","8 = Ignore disabled keys (Returns 0 for all DisableKey'd keys)"],"Name":"IsKeyPressed","Version":"1.1","Condition":"Yes","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Fakes a key press for one frame."],"Name":"TapKey","Alias":"tk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Fakes a key press indefinately with the specified dx scancode."],"Name":"HoldKey","Alias":"hk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Releases a key held down by HoldKey."],"Name":"ReleaseKey","Alias":"rk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Prevents a player from using a key."],"Name":"DisableKey","Alias":"dk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Reenables a key previously disabled with DisableKey."],"Name":"EnableKey","Alias":"ek","Version":"1.1","Convention":"B","Tags":["Input"]},{"ReturnType":[{"type":"count:Integer"}],"Description":["Returns how many keyboard keys are currently being held down."],"Name":"GetNumKeysPressed","Alias":"gnkp","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"type":"index:Integer"}],"ReturnType":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Returns the scancode of the nth key which is currently being held down."],"Name":"GetKeyPress","Alias":"gkp","Version":"1.1","Convention":"B","Tags":["Input"]},{"ReturnType":[{"type":"count:Integer"}],"Description":["Returns how many mouse buttons are currently being held down."],"Name":"GetNumMouseButtonsPressed","Alias":"gnmbp","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"type":"index:Integer"}],"ReturnType":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Returns the code of the nth mouse button which is currently being held down."],"Name":"GetMouseButtonPress","Alias":"gmbp","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"}],"ReturnType":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Returns the key assigned to a control."],"Name":"GetControl","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"}],"ReturnType":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Returns the mouse button assigned to a control."],"Name":"GetAltControl","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Fakes a key press for one frame in menu mode."],"Name":"MenuTapKey","Alias":"mtk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Fakes a key press indefinately in menu mode."],"Name":"MenuHoldKey","Alias":"mhk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Releases a key held down by MenuHoldKey."],"Name":"MenuReleaseKey","Alias":"mrk","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Disables the key and button bound to a control."],"Name":"DisableControl","Alias":"dc","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"},{"type":"int:Integer","optional":"true"}],"Description":["Enables the key and button assigned to a control."],"Name":"EnableControl","Alias":"ec","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"}],"Description":["Taps the key or mouse button assigned to control."],"Name":"TapControl","Alias":"tc","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"},{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Assigns a new keycode to the specified keyboard control. Changes are saved to the .ini when the user exits the game."],"Name":"SetControl","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"},{"url":"Key_Codes","type":"scanCode:Integer"}],"Description":["Assigns a new mouse button code to the specified mouse control. Changes are saved to the ini when the user exits the game."],"Name":"SetAltControl","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"int:scanCode"},{"type":"bool:IsControl","value":"0,1"}],"ReturnType":[{"type":"bool:"}],"Description":["Flags a key or mouse button as a control, allowing modders to define custom controls - other scripts can then use IsControl to detect conflicts in which two mods try to use the same key for different actions."],"Name":"SetIsControl","Version":"1.1","Condition":"False","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"ReturnType":[{"type":"isControl:Integer"}],"Description":["Returns 1 if the specified key or mouse button is assigned to a game control, 2 if it has been registered as a custom control by a mod via SetIsControl, or 0 otherwise."],"Name":"IsControl","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"scanCode:Integer"}],"ReturnType":[{"type":"isDisabled:Bool"}],"Description":["Returns 1 if the key has been disabled using DisableKey."],"Name":"IsKeyDisabled","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"}],"ReturnType":[{"type":"isDisabled:Bool"}],"Description":["Returns 1 if thecontrol has been disabled by a call to DisableControl.","Note that this only keeps track of calls to DisableControl and EnableControl; it does not check if the disabled state of the key or mouse button has been affected by DisableKey."],"Name":"IsControlDisabled","Version":"1.1","Convention":"B","Tags":["Input"]},{"Parameters":[{"url":"Key_Codes","type":"controlCode:Integer"}],"ReturnType":[{"type":"isPressed:Bool"}],"Description":["Returns 1 if either the key or mouse button assigned to the specified control code is currently pressed. Detects disabled keys."],"Name":"IsControlPressed","Version":"1.1","Condition":"Yes","Convention":"B","Tags":["Input"]}]